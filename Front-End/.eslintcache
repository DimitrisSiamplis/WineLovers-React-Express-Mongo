[{"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\index.js":"1","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\App.js":"2","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Components\\Login.js":"3","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Footer.js":"4","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Components\\Register.js":"5","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Components\\Navigation.js":"6","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Wines.js":"7","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Home.js":"8","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Profile.js":"9","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\WineProfile.js":"10","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Card.js":"11","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\History.js":"12","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Blog.js":"13","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Functions\\functions.js":"14","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\BlogInfo.js":"15","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\ChangePassword.js":"16","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\EditProfile.js":"17","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\AddWine.js":"18","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\FoodAndWine.js":"19","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\HelpUs.js":"20","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Guide.js":"21"},{"size":227,"mtime":1637656868139,"results":"22","hashOfConfig":"23"},{"size":4364,"mtime":1657529616935,"results":"24","hashOfConfig":"23"},{"size":3276,"mtime":1655214623711,"results":"25","hashOfConfig":"23"},{"size":670,"mtime":1654092783263,"results":"26","hashOfConfig":"23"},{"size":9656,"mtime":1655214762974,"results":"27","hashOfConfig":"23"},{"size":4904,"mtime":1657629339246,"results":"28","hashOfConfig":"23"},{"size":24398,"mtime":1657206581232,"results":"29","hashOfConfig":"23"},{"size":113,"mtime":1654159874719,"results":"30","hashOfConfig":"23"},{"size":7834,"mtime":1656500529609,"results":"31","hashOfConfig":"23"},{"size":13472,"mtime":1656584190582,"results":"32","hashOfConfig":"23"},{"size":13701,"mtime":1655977427782,"results":"33","hashOfConfig":"23"},{"size":3536,"mtime":1655214469864,"results":"34","hashOfConfig":"23"},{"size":13318,"mtime":1655899634206,"results":"35","hashOfConfig":"23"},{"size":1769,"mtime":1655465776718,"results":"36","hashOfConfig":"23"},{"size":9556,"mtime":1655214828103,"results":"37","hashOfConfig":"23"},{"size":3200,"mtime":1655214447434,"results":"38","hashOfConfig":"23"},{"size":8840,"mtime":1657193120146,"results":"39","hashOfConfig":"23"},{"size":13257,"mtime":1657311015103,"results":"40","hashOfConfig":"23"},{"size":157,"mtime":1657310621949,"results":"41","hashOfConfig":"23"},{"size":1090,"mtime":1657311725321,"results":"42","hashOfConfig":"23"},{"size":19449,"mtime":1657631157309,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1rubiwl",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\index.js",[],["100","101"],"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\App.js",["102","103"],"import { Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Login from \"./Components/Login\";\nimport Register from \"./Components/Register\";\nimport Footer from \"./Footer\";\nimport Navigation from \"./Components/Navigation\";\nimport Wines from \"./pages/Wines\";\nimport Home from \"./pages/Home\";\nimport Card from \"./pages/Card\";\nimport Blog from \"./pages/Blog\";\nimport History from \"./pages/History\";\nimport BlogInfo from \"./pages/BlogInfo\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport EditProfile from \"./pages/EditProfile\";\nimport AddWine from \"./pages/AddWine\";\nimport FoodAndWine from \"./pages/FoodAndWine\";\nimport Guide from \"./pages/Guide\";\nimport HelpUs from \"./pages/HelpUs\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport Profile from \"./pages/Profile\";\nimport WineProfile from \"./pages/WineProfile\";\nimport { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [Email, setEmail] = useState(false);\n  const [loginMessage, setLoginMessage] = useState(false);\n  const [nightOrLight, setNightOrLight] = useState(\"light\");\n  const cookies = new Cookies();\n\n  var userEmail = cookies.get(\"email\");\n\n  const darkOrLightCallback = (childData) => {\n    setNightOrLight(childData);\n  };\n\n  console.log(nightOrLight);\n\n  const handleCallback = (email) => {\n    setEmail(email);\n    setLoginMessage(true);\n    setTimeout(() => {\n      setLoginMessage(false);\n    }, 6000);\n  };\n\n  const handleLogoutCallback = () => {\n    const cookie = new Cookies();\n    cookie.remove(\"email\");\n    setEmail(undefined);\n  };\n\n  // ------- Initial Check if user is Login ----------\n  useEffect(() => {\n    if (userEmail) {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n    }\n  }, []);\n\n  // ---------- set that user is login --------------\n  useEffect(() => {\n    if (userEmail !== undefined) {\n      setIsLogin(true);\n    } else {\n      setIsLogin(false);\n    }\n  }, [Email]);\n\n  return (\n    <div className={nightOrLight}>\n      {isLogin && (\n        <div>\n          <Navigation\n            handleCallback={handleLogoutCallback}\n            darkOrLightCallback={darkOrLightCallback}\n          />\n          {loginMessage && (\n            <Alert className=\"loginAlert\" variant=\"success\">\n              User succesfully Login !\n            </Alert>\n          )}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n\n            <Route exact path=\"/wines\">\n              <Wines className={nightOrLight} />\n            </Route>\n            <Route exact path=\"/wine/:id\">\n              <WineProfile />\n            </Route>\n            <Route exact path=\"/card\">\n              <Card />\n            </Route>\n\n            <Route exact path=\"/history\">\n              <History />\n            </Route>\n\n            <Route exact path=\"/blog\">\n              <Blog />\n            </Route>\n\n            <Route exact path=\"/blogInfo/:id\">\n              <BlogInfo />\n            </Route>\n            <Route exact path=\"/changePassword\">\n              <ChangePassword />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/editProfile\">\n              <EditProfile />\n            </Route>\n\n            <Route exact path=\"/addWine\">\n              <AddWine />\n            </Route>\n\n            <Route exact path=\"/foodAndWine\">\n              <FoodAndWine />\n            </Route>\n\n            <Route exact path=\"/helpUs\">\n              <HelpUs />\n            </Route>\n\n            <Route exact path=\"/wineGuide\">\n              <Guide />\n            </Route>\n          </Switch>\n        </div>\n      )}\n      {isLogin === false && (\n        <Container>\n          <div className=\"title\">\n            <h1>WineLovers</h1>\n            <hr />\n          </div>\n          <Row>\n            <Col xs={4}>\n              <Login className=\"login\" handleCallback={handleCallback} />\n            </Col>\n            <Col xs={1}></Col>\n            <Col xs={7}>\n              <Register />\n            </Col>\n          </Row>\n        </Container>\n      )}\n\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Components\\Login.js",[],"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Footer.js",["104","105"],"import React from 'react'\r\nimport { Button, Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className='footer'>\r\n        <Container>\r\n            <Row>\r\n                <h5 className='footerTitle'>WineLovers Official Website - Find any wine!</h5>\r\n            </Row>\r\n            <hr />\r\n            <Row>\r\n                <Col xs = {4}>\r\n                    <h6>About Us</h6>\r\n                </Col>\r\n                <Col xs = {4}><h6>Contact Us</h6></Col>\r\n                <Col xs = {4}><h6>News</h6></Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Components\\Register.js",["106"],"import React from \"react\";\r\nimport \"./Register.css\";\r\nimport { Button, Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [sex, setSex] = useState(\"\");\r\n  const [isOkForRegister, setIsOkForRegister] = useState(true);\r\n\r\n  // const [isLogin, setIslogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      firstName !== \"\" &&\r\n      lastName !== \"\" &&\r\n      age !== \"\" &&\r\n      email !== \"\" &&\r\n      email.length > 4 &&\r\n      password !== \"\" &&\r\n      password.length > 4 &&\r\n      passwordConfirm !== \"\" &&\r\n      password === passwordConfirm &&\r\n      address !== \"\" &&\r\n      number !== \"\" &&\r\n      phone !== \"\" &&\r\n      birthday !== \"\"\r\n    ) {\r\n      setIsOkForRegister(false);\r\n    } else {\r\n      setIsOkForRegister(true);\r\n    }\r\n  }, [\r\n    firstName,\r\n    lastName,\r\n    age,\r\n    email,\r\n    password,\r\n    passwordConfirm,\r\n    address,\r\n    number,\r\n    phone,\r\n  ]);\r\n\r\n  const onRegisterHandler = () => {\r\n    console.log(\r\n      firstName,\r\n      lastName,\r\n      age,\r\n      email,\r\n      password,\r\n      passwordConfirm,\r\n      address,\r\n      number,\r\n      phone,\r\n      birthday,\r\n      sex\r\n    );\r\n\r\n    var useDetails = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      age: age,\r\n      email: email,\r\n      password: password,\r\n      passwordConfirm: passwordConfirm,\r\n      address: address,\r\n      number: number,\r\n      phone: phone,\r\n      birthday: birthday,\r\n      sex: sex,\r\n    };\r\n\r\n    \r\n\r\n    fetch(\"http://localhost:4000/register\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ useDetails }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.alreadyExist) {\r\n          // setIslogin(false);\r\n          alert(\"this Email already exists\");\r\n         } \r\n         //else {\r\n        //   setIslogin(true);\r\n        // }\r\n      });\r\n  };\r\n\r\n  const onClearHandler = () => {\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setAge(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setPasswordConfirm(\"\");\r\n    setAddress(\"\");\r\n    setNumber(\"\");\r\n    setPhone(\"\");\r\n    setBirthday(\"\");\r\n    setSex(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"loginCard\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <p className=\"loginOrRegister\">Register Form</p>\r\n            </Col>\r\n            <Col xs={4}></Col>\r\n            <Col xs={2}></Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <hr />\r\n\r\n        <Form>\r\n          <Container>\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    value={firstName}\r\n                    onChange={(e) => {\r\n                      setFirstName(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={lastName}\r\n                    placeholder=\"Last Name\"\r\n                    onChange={(e) => {\r\n                      setLastName(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Phone</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    placeholder=\"Phone\"\r\n                    onChange={(e) => {\r\n                      setPhone(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={password}\r\n                    placeholder=\"Email\"\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Comfirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={passwordConfirm}\r\n                    placeholder=\"Phone\"\r\n                    onChange={(e) => {\r\n                      setPasswordConfirm(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n                {password !== \"\" &&\r\n                  passwordConfirm !== \"\" &&\r\n                  password !== passwordConfirm && (\r\n                    <p className=\"alertMessage\">Passwords do not match!</p>\r\n                  )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={address}\r\n                    placeholder=\"Address\"\r\n                    onChange={(e) => {\r\n                      setAddress(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Number</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={number}\r\n                    placeholder=\"Number\"\r\n                    onChange={(e) => {\r\n                      setNumber(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Birthday</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={birthday}\r\n                    placeholder=\"Birthday\"\r\n                    onChange={(e) => {\r\n                      setBirthday(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Sex</Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    onChange={(e) => {\r\n                      setSex(e.target.value);\r\n                      console.log(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Other\">Other</option>\r\n                  </Form.Select>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Label>Age</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    value={age}\r\n                    placeholder=\"Age\"\r\n                    min=\"18\"\r\n                    onChange={(e) => {\r\n                      setAge(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={isOkForRegister}\r\n            onClick={onRegisterHandler}\r\n          >\r\n            Create acount\r\n          </Button>{\" \"}\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Button variant=\"warning\" onClick={onClearHandler}>\r\n            Clear\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\Components\\Navigation.js",["107","108","109","110","111","112"],"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Wines.js",["113","114","115","116","117","118","119","120","121","122","123","124"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Modal,\r\n  Alert,\r\n  PageItem,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartPlus,\r\n  faFilter,\r\n  faStar,\r\n  faSearchLocation,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./Wines.css\";\r\n\r\nconst Wines = () => {\r\n  let history = useHistory();\r\n\r\n  const [initialWines, setInitialWines] = useState([]);\r\n  const [secondaryWines, setSecondaryWines] = useState([]);\r\n  const [pagination, setPagination] = useState([1]);\r\n  const [pageSelected, setPageSelected] = useState(1);\r\n  const [wines, setWines] = useState([]);\r\n  const [selectedWineId, setSelectedWineId] = useState(\"\");\r\n  const [showFilter, setShowFilter] = useState(true);\r\n  const [alreadyExistInCard, setAlreadyExistInCard] = useState(false);\r\n  const [succesfullyAddedToCard, setSuccesfullyAddedToCard] = useState(false);\r\n\r\n  const [colorWines, setColorWines] = useState([]);\r\n  const [typeWines, setTypeWines] = useState([]);\r\n  const [yearWines, setYearWines] = useState([]);\r\n\r\n  // ------------FIlter Hooks -----------------------------\r\n  const [wineSearch, setWineSearch] = useState(\"\");\r\n  const [wineType, setWineType] = useState(\"\");\r\n  const [wineColor, setWineColor] = useState(\"\");\r\n  const [wineYear, setWineYear] = useState(\"\");\r\n  const [minRate, setMinRate] = useState(0);\r\n  const [maxRate, setMaxRate] = useState(5);\r\n  const [maxInitialPrice, setMaxInitialPrice] = useState();\r\n  const [minInitialPrice, setMinInitialPrice] = useState();\r\n  const [maxPrice, setMaxPrice] = useState();\r\n  const [minPrice, setMinPrice] = useState();\r\n\r\n  const [searchByMaxPrice, setByMaxPrice] = useState(false);\r\n  const [searchByMaxRate, setByMaxRate] = useState(false);\r\n\r\n  // -------- MODAL\r\n  const [show, setShow] = useState(false);\r\n  const [amount, setAmount] = useState(0);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  // --------- Set COOKIES\r\n  const cookies = new Cookies();\r\n  var user = cookies.get(\"email\");\r\n\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n\r\n  //------ initial Wines --------------\r\n  const getWines = () => {\r\n    fetch(\"http://localhost:4000/getWines\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json.wines);\r\n\r\n        setWines([json]);\r\n        setInitialWines([json]);\r\n        setSecondaryWines([json]);\r\n        setPageSelected(1);\r\n        var colors = [];\r\n        var types = [];\r\n        var years = [];\r\n        var prices = [];\r\n        for (const key in json.wines) {\r\n          colors.push(json.wines[key].wine.Color);\r\n          types.push(json.wines[key].wine.Type);\r\n          years.push(json.wines[key].wine.Year);\r\n          prices.push(json.wines[key].wine.Price);\r\n        }\r\n        setMaxInitialPrice(Math.max.apply(Math, prices));\r\n        setMinInitialPrice(Math.min.apply(Math, prices));\r\n        setMinPrice(Math.min.apply(Math, prices));\r\n        setMaxPrice(Math.max.apply(Math, prices));\r\n        colors = [...new Set(colors)];\r\n        types = [...new Set(types)];\r\n        years = [...new Set(years)];\r\n        setColorWines(colors);\r\n        setTypeWines(types);\r\n        setYearWines(years);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWines();\r\n  }, []);\r\n\r\n  // ----------- when wines length Change --------------\r\n  useEffect(() => {\r\n    if (wines.length !== 0) {\r\n      var paginationArray = [];\r\n      for (let i = 0; i < wines[0].wines.length / 5; i++) {\r\n        paginationArray.push(i + 1);\r\n      }\r\n\r\n      setPagination(paginationArray);\r\n    }\r\n  }, [wines]);\r\n\r\n  // ---------- when page Selected Change ------------\r\n  // useEffect(() => {\r\n  //   var oldWines = wines;\r\n  //   var newWineArray = [];\r\n  //   var newArray = oldWines[0].wines.splice(\r\n  //     (pageSelected - 1) * 5,\r\n  //     pageSelected * 5\r\n  //   );\r\n  //   newWineArray.push({ wines: newArray });\r\n  //   console.log(newWineArray)\r\n  //   // setSecondaryWines(wines.slice((pageSelected - 1) * 5, pageSelected * 5));\r\n  // }, [pageSelected]);\r\n\r\n  // ------ FILTER Wines ------------\r\n  const filterWines = () => {\r\n    var oldWines = initialWines;\r\n\r\n    var newWineArray = [];\r\n    var newArray = oldWines[0].wines.filter(function (el) {\r\n      return (\r\n        el.wine.WineName.includes(wineSearch) &&\r\n        el.wine.Color.includes(wineColor) &&\r\n        el.wine.Type.includes(wineType) &&\r\n        String(el.wine.Year).includes(wineYear) &&\r\n        el.sum_total_rate < maxRate &&\r\n        el.sum_total_rate >= minRate &&\r\n        el.wine.Price <= maxPrice &&\r\n        el.wine.Price >= minPrice\r\n      );\r\n    });\r\n\r\n    if (searchByMaxPrice) {\r\n      newArray.sort((a, b) => {\r\n        return b.wine.Price - a.wine.Price;\r\n      });\r\n    }\r\n\r\n    if (searchByMaxRate) {\r\n      newArray.sort((a, b) => {\r\n        return b.sum_total_rate - a.sum_total_rate;\r\n      });\r\n    }\r\n    console.log(newArray);\r\n\r\n    newWineArray.push({ wines: newArray });\r\n    setWines(newWineArray);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const onClearHandler = () => {\r\n    setWineSearch(\"\");\r\n    setWineType(\"\");\r\n    setWineColor(\"\");\r\n    setWineYear(\"\");\r\n    setMinRate(0);\r\n    setMaxRate(5);\r\n    setMaxPrice(maxInitialPrice);\r\n    setMinPrice(minInitialPrice);\r\n    setByMaxPrice(false);\r\n    setByMaxRate(false);\r\n    setWines(initialWines);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // --------- Add To Card ----------------\r\n\r\n  const onAddToCardHandler = (wineArray) => {\r\n    // ----------- save card details to cookies ---------------\r\n    const cookies = new Cookies();\r\n    var isCardEmty = cookies.get(\"card\");\r\n\r\n    if (isCardEmty === \"\" || isCardEmty === undefined) {\r\n      cookies.set(\"card\", wineArray + \",\" + amount, { path: \"/\" });\r\n    } else {\r\n      var editedWineArray = wineArray.slice(0, -1);\r\n      if (isCardEmty.includes(editedWineArray)) {\r\n        setAlreadyExistInCard(true);\r\n        setTimeout(() => {\r\n          setAlreadyExistInCard(false);\r\n        }, 3000);\r\n      } else {\r\n        setSuccesfullyAddedToCard(true);\r\n        setTimeout(() => {\r\n          setSuccesfullyAddedToCard(false);\r\n        }, 3000);\r\n        setAlreadyExistInCard(false);\r\n        var newCardCookie = isCardEmty + \"|\" + wineArray + \",\" + amount;\r\n        cookies.set(\"card\", newCardCookie, { path: \"/\" });\r\n      }\r\n    }\r\n    setAmount(0);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"modalTitle\">\r\n              Add <strong>{selectedWineId.split(\",\")[1]}</strong> to Card\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Label>Chooce Amount</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setAmount(e.target.value);\r\n              }}\r\n              min=\"1\"\r\n              max=\"20\"\r\n              placeholder=\"Chooce Amount\"\r\n            />\r\n            {(amount === 0 || amount < 0 || amount > 20) && (\r\n              <p className=\"alertMessage\">Range 1-20 wines!</p>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              disabled={\r\n                amount === 0 || amount === \"\" || amount < 0 || amount > 20\r\n              }\r\n              onClick={() => {\r\n                onAddToCardHandler(selectedWineId);\r\n              }}\r\n            >\r\n              Add to card\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n      {succesfullyAddedToCard && (\r\n        <Alert className=\"alertCardMessage\" key=\"danger\" variant=\"success\">\r\n          Wine added succesfully to card!\r\n        </Alert>\r\n      )}\r\n      {alreadyExistInCard && (\r\n        <Alert className=\"alertCardMessage\" key=\"danger\" variant=\"danger\">\r\n          This wine Already Exist in Card!\r\n        </Alert>\r\n      )}\r\n      <div className=\"twoDivs\">\r\n        <FontAwesomeIcon\r\n          className=\"showFilters\"\r\n          icon={faFilter}\r\n          size=\"2x\"\r\n          title={showFilter ? \"Hide Filters\" : \"Show Filters\"}\r\n          onClick={() => {\r\n            setShowFilter(!showFilter);\r\n          }}\r\n          transform={{ rotate: showFilter ? 42 : 0 }}\r\n        />\r\n        {showFilter && (\r\n          <div className=\"filters\">\r\n            <h4>&nbsp; Search any wine.</h4>\r\n\r\n            <Container>\r\n              <Row>\r\n                <Form>\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Filter Wine</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Filter Wine\"\r\n                      value={wineSearch}\r\n                      onChange={(e) => {\r\n                        setWineSearch(e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Label>Wine Type</Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      setWineType(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Ξηρο..</option>\r\n                    {typeWines.map((type) => (\r\n                      <option value={type}>{type}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                  <Form.Label>Wine Color</Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    onChange={(e) => {\r\n                      setWineColor(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Red/White/Roze..</option>\r\n                    {colorWines.map((color) => (\r\n                      <option value={color}>{color}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                  <Form.Label>Wine Year</Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    onChange={(e) => {\r\n                      setWineYear(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"\">2000/2010/2020..</option>\r\n                    {yearWines.map((year) => (\r\n                      <option value={year}>{year}</option>\r\n                    ))}\r\n                  </Form.Select>\r\n                  <br />\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <Form.Label>Min Rate Range</Form.Label>\r\n                      <Form.Range\r\n                        min=\"0\"\r\n                        max=\"5\"\r\n                        value={minRate}\r\n                        onChange={(e) => {\r\n                          if (maxRate > e.target.value) {\r\n                            setMinRate(e.target.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                      <strong>\r\n                        {minRate}\r\n                        <FontAwesomeIcon\r\n                          className=\"starIcon\"\r\n                          icon={faStar}\r\n                          size=\"1x\"\r\n                        />\r\n                      </strong>\r\n                    </Col>\r\n\r\n                    <Col xs={6}>\r\n                      {\" \"}\r\n                      <Form.Label>Max Rate Range</Form.Label>\r\n                      <Form.Range\r\n                        min=\"0\"\r\n                        max=\"5\"\r\n                        value={maxRate}\r\n                        onChange={(e) => {\r\n                          if (minRate < e.target.value) {\r\n                            setMaxRate(e.target.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                      <strong>\r\n                        {maxRate}\r\n                        <FontAwesomeIcon\r\n                          className=\"starIcon\"\r\n                          icon={faStar}\r\n                          size=\"1x\"\r\n                        />\r\n                      </strong>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col xs={6}>\r\n                      <Form.Label>Min Price Price</Form.Label>\r\n                      <Form.Range\r\n                        min={minInitialPrice}\r\n                        max={maxInitialPrice}\r\n                        value={\r\n                          minPrice === minInitialPrice\r\n                            ? minInitialPrice\r\n                            : minPrice\r\n                        }\r\n                        onChange={(e) => {\r\n                          if (maxPrice > e.target.value) {\r\n                            setMinPrice(e.target.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                      <strong>{minPrice} €</strong>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      {\" \"}\r\n                      <Form.Label>Max Price Price</Form.Label>\r\n                      <Form.Range\r\n                        min={minInitialPrice}\r\n                        max={maxInitialPrice}\r\n                        value={\r\n                          maxPrice === maxInitialPrice\r\n                            ? maxInitialPrice\r\n                            : maxPrice\r\n                        }\r\n                        onChange={(e) => {\r\n                          if (minPrice < e.target.value) {\r\n                            setMaxPrice(e.target.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                      <strong>{maxPrice} €</strong>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <hr />\r\n                  <div className=\"rateCheckBox\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={searchByMaxPrice}\r\n                      onChange={(e) => {\r\n                        setByMaxPrice(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <label className=\"rateLabel\">\r\n                      &nbsp;Search&nbsp;by&nbsp;max&nbsp;price.\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"rateCheckBox\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={searchByMaxRate}\r\n                      onChange={(e) => {\r\n                        setByMaxRate(e.target.checked);\r\n                      }}\r\n                    />\r\n                    <label className=\"rateLabel\">\r\n                      &nbsp;Search&nbsp;by&nbsp;max&nbsp;rate.\r\n                    </label>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n                  <Row>\r\n                    <Col xs={4}>\r\n                      <Button variant=\"warning\" onClick={onClearHandler}>\r\n                        Clear\r\n                      </Button>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                      <Button variant=\"success\" onClick={filterWines}>\r\n                        Search\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  &nbsp;\r\n                </Form>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        )}\r\n        <div className=\"container\">\r\n          <Container>\r\n            {wines.length !== 0 && (\r\n              <Row>\r\n                {/* <Col xs={2}></Col>\r\n                <Col xs={10}></Col> */}\r\n                {wines[0].wines.map((item) => (\r\n                  <Col xs={width < 1000 ? (width < 700 ? 12 : 6) : 4}>\r\n                    {wines.length !== 0 && (\r\n                      <Container className=\"item\">\r\n                        <div\r\n                          className=\"card card-body wine\"\r\n                          // onClick={() => {\r\n                          //   console.log(item.wine._id);\r\n                          //   history.push(\"/wine/\" + item.wine._id);\r\n                          // }}\r\n                        >\r\n                          <div className=\"media align-items-center align-items-lg-start text-center text-lg-left flex-column flex-lg-row\">\r\n                            <div className=\"mr-2 mb-3 mb-lg-0\">\r\n                              <img className=\"image\" src={item.wine.ImageUrl} />\r\n                            </div>\r\n                            <div className=\"media-body\">\r\n                              <h6 className=\"media-title font-weight-semibold\">\r\n                                <a\r\n                                  href={`/wine/${item.wine._id}`}\r\n                                  data-abc=\"true\"\r\n                                >\r\n                                  {\" \"}\r\n                                  {item.wine.WineName}\r\n                                </a>\r\n                              </h6>\r\n                              <ul className=\"list-inline list-inline-dotted mb-3 mb-lg-2\">\r\n                                <li className=\"list-inline-item\">\r\n                                  <a\r\n                                    href=\"#\"\r\n                                    className=\"text-muted\"\r\n                                    data-abc=\"true\"\r\n                                  >\r\n                                    {item.wine.Type}\r\n                                  </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                  <a\r\n                                    href=\"#\"\r\n                                    className=\"text-muted\"\r\n                                    data-abc=\"true\"\r\n                                  >\r\n                                    {item.wine.Color}\r\n                                  </a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\">\r\n                                  <a\r\n                                    href=\"#\"\r\n                                    className=\"text-muted\"\r\n                                    data-abc=\"true\"\r\n                                  >\r\n                                    {item.wine.Year}\r\n                                  </a>\r\n                                </li>\r\n                                <br />\r\n                                <li className=\"list-inline-item\">\r\n                                  <a\r\n                                    href=\"#\"\r\n                                    className=\"text-muted\"\r\n                                    data-abc=\"true\"\r\n                                  >\r\n                                    <FaMapMarkerAlt />&nbsp;\r\n                                    {item.wine.Location} , {item.wine.Country}\r\n                                  </a>\r\n                                </li>\r\n                              </ul>\r\n                              {/* <p className=\"mb-3\">\r\n                                {item.wine.WineDescription}\r\n                              </p> */}\r\n                              <ul className=\"list-inline list-inline-dotted mb-0\">\r\n                                <li className=\"list-inline-item\">\r\n                                  {\" \"}\r\n                                  <strong>Grape : </strong> {item.wine.Grapes}{\" \"}\r\n                                </li>\r\n                                <br />\r\n                                <li className=\"list-inline-item\">\r\n                                  {\" \"}\r\n                                  <strong>Winery by</strong>{\" \"}\r\n                                  <a\r\n                                    target=\"_blank\"\r\n                                    href={`https://www.google.com/search?q=${item.wine.Winery}`}\r\n                                    data-abc=\"true\"\r\n                                  >\r\n                                    {\" \"}\r\n                                    {item.wine.Winery}{\" \"}\r\n                                  </a>\r\n                                </li>\r\n                                <br />\r\n                              </ul>\r\n                            </div>\r\n                            <div className=\"mt-3 mt-lg-0 ml-lg-3 text-center\">\r\n                              <h3 className=\"mb-0 font-weight-semibold\">\r\n                                {item.wine.Price} €\r\n                              </h3>\r\n                              <h6 className=\"mb-0 font-weight-semibold\">\r\n                                {\" \"}\r\n                                {Math.round(item.sum_total_rate * 100) /\r\n                                  100}{\" \"}\r\n                                <FontAwesomeIcon\r\n                                  className=\"starIcon\"\r\n                                  icon={faStar}\r\n                                  size=\"1x\"\r\n                                />\r\n                              </h6>\r\n                              <div className=\"text-muted\">\r\n                                {\" \"}\r\n                                <span className=\"fa fa-star checked\"></span>{\" \"}\r\n                              </div>\r\n                              <div className=\"text-muted\">\r\n                                {\" \"}\r\n                                {item.number_of_rate} reviews{\" \"}\r\n                              </div>\r\n                              <div className=\"text-muted\"> </div>\r\n\r\n                              <Button\r\n                                variant=\"warning\"\r\n                                title=\"Add to Card\"\r\n                                onClick={() => {\r\n                                  setSelectedWineId(\r\n                                    item.wine._id +\r\n                                      \",\" +\r\n                                      item.wine.WineName +\r\n                                      \",\" +\r\n                                      item.wine._id +\r\n                                      \",\" +\r\n                                      item.wine.Color +\r\n                                      \",\" +\r\n                                      item.wine.Type +\r\n                                      \",\" +\r\n                                      item.wine.Price +\r\n                                      \",\" +\r\n                                      item.wine.ImageUrl\r\n                                  );\r\n                                  handleShow(item.wine._id);\r\n                                }}\r\n                              >\r\n                                <FontAwesomeIcon icon={faCartPlus} size=\"1x\" />\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Container>\r\n                    )}\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            )}\r\n            <br />\r\n            <br />\r\n            <Pagination>\r\n              <Pagination.First />\r\n              <Pagination.Prev />\r\n              {pagination.map((page) => (\r\n                <div>\r\n                  <Pagination.Item\r\n                    active={page === pageSelected ? true : false}\r\n                    onClick={() => {\r\n                      setPageSelected(page);\r\n                    }}\r\n                  >\r\n                    {page}\r\n                  </Pagination.Item>\r\n                </div>\r\n              ))}\r\n\r\n              <Pagination.Next />\r\n              <Pagination.Last />\r\n            </Pagination>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wines;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Home.js",[],"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Profile.js",["125","126","127","128","129","130","131"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport \"./Profile.css\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Modal,\r\n  Alert,\r\n  PageItem,\r\n} from \"react-bootstrap\";\r\n\r\nconst Profile = () => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const [userCommentStatistic, setUserCommentStatistic] = useState([]);\r\n\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n\r\n  // ------------ Get user Details -----------------\r\n  const getUser = () => {\r\n    fetch(`http://localhost:4000/getUser/${userEmail}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUserDetails(json);\r\n      });\r\n  };\r\n  const getUserComments = () => {\r\n    fetch(`http://localhost:4000/getUserComments/${userEmail}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setUserCommentStatistic([json]);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getUser();\r\n    getUserComments();\r\n  }, []);\r\n\r\n  const data = [\r\n    [\"Task\", \"Hours per Day\"],\r\n    [\r\n      \"Total Comments\",\r\n      userCommentStatistic.length !== 0\r\n        ? userCommentStatistic[0].numberOfComments\r\n        : 0,\r\n    ],\r\n    [\r\n      \"User Comments\",\r\n      userCommentStatistic.length !== 0\r\n        ? userCommentStatistic[0].numberOfUserComment\r\n        : 0,\r\n    ],\r\n  ];\r\n  const options = {\r\n    title: \"My Comments Activities\",\r\n  };\r\n\r\n  // -------------------Rate Pie ---------------------\r\n\r\n  // const dataRate = [\r\n  //   [\"Task\", \"Hours per Day\"],\r\n  //   [\r\n  //     \"Rate with 1\",\r\n  //     userCommentStatistic.length !== 0\r\n  //       ? Number(userCommentStatistic[0].ratesPerRate[0])\r\n  //       : 0,\r\n  //   ],\r\n  //   [\r\n  //     \"Rate with 2\",\r\n  //     userCommentStatistic.length !== 0\r\n  //       ? Number(userCommentStatistic[0].ratesPerRate[1])\r\n  //       : 0,\r\n  //   ],\r\n  //   ,\r\n  //   [\r\n  //     \"Rate with 3\",\r\n  //     userCommentStatistic.length !== 0\r\n  //       ? Number(userCommentStatistic[0].ratesPerRate[2])\r\n  //       : 0,\r\n  //   ],\r\n  //   ,\r\n  //   [\r\n  //     \"Rate with 4\",\r\n  //     userCommentStatistic.length !== 0\r\n  //       ? Number(userCommentStatistic[0].ratesPerRate[3])\r\n  //       : 0,\r\n  //   ],\r\n  //   ,\r\n  //   [\r\n  //     \"Rate with 5\",\r\n  //     userCommentStatistic.length !== 0\r\n  //       ? Number(userCommentStatistic[0].ratesPerRate[4])\r\n  //       : 0,\r\n  //   ],\r\n  // ];\r\n  const dataRate = [\r\n    [\"Task\", \"Rate\"],\r\n    [\r\n      \"Rate with 1\",\r\n      userCommentStatistic.length !== 0\r\n        ? Number(userCommentStatistic[0].ratesPerRate[0])\r\n        : 0,\r\n    ],\r\n    [\r\n      \"Rate with 2\",\r\n      userCommentStatistic.length !== 0\r\n        ? Number(userCommentStatistic[0].ratesPerRate[1])\r\n        : 0,\r\n    ],\r\n    [\r\n      \"Rate with 3\",\r\n      userCommentStatistic.length !== 0\r\n        ? Number(userCommentStatistic[0].ratesPerRate[2])\r\n        : 0,\r\n    ],\r\n    [\r\n      \"Rate with 4\",\r\n      userCommentStatistic.length !== 0\r\n        ? Number(userCommentStatistic[0].ratesPerRate[3])\r\n        : 0,\r\n    ],\r\n    [\r\n      \"Rate with 5\",\r\n      userCommentStatistic.length !== 0\r\n        ? Number(userCommentStatistic[0].ratesPerRate[4])\r\n        : 0,\r\n    ],\r\n  ];\r\n\r\n  console.log(dataRate);\r\n  console.log(data);\r\n  const optionsRate = {\r\n    title: \"Rate Percent\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {userDetails !== undefined && (\r\n        <div className=\"container rounded bg-white mt-5 mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 border-right\">\r\n              {/* <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n              <img\r\n                className=\"rounded-circle mt-5\"\r\n                width=\"150px\"\r\n                src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"\r\n              />\r\n              <span className=\"font-weight-bold\"></span>\r\n              <span className=\"text-black-50\"></span>\r\n              <span> </span>\r\n            </div>  */}\r\n\r\n              <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n                <img\r\n                  className=\"rounded-circle mt-5\"\r\n                  width=\"150px\"\r\n                  src={\r\n                    userDetails.user.Gender === \"Female\"\r\n                      ? \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSNBSq3Ijqf7bxwcZxjzcgKm_RYhCWWhK7QTQ&usqp=CAU\"\r\n                      : \"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\"\r\n                  }\r\n                />\r\n                <span className=\"font-weight-bold\"></span>\r\n                <span className=\"text-black-50\"></span>\r\n                <span> </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5 border-right\">\r\n              <div className=\"p-3 py-5\">\r\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                  <h4 className=\"text-right\">Profile Details</h4>\r\n                </div>\r\n\r\n                <div className=\"row mt-2\">\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"labels\">\r\n                      First Name :{\" \"}\r\n                      <strong>{userDetails.user.Name.split(\" \")[0]}</strong>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-2\">\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"labels\">\r\n                      Last Name :{\" \"}\r\n                      <strong>{userDetails.user.Name.split(\" \")[1]}</strong>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\">\r\n                      Mobile Number : <strong>{userDetails.user.Mobile}</strong>\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\">\r\n                      Address : <strong>{userDetails.user.Address}</strong>{\" \"}\r\n                    </label>\r\n                  </div>\r\n                  <p></p>\r\n                  <hr />\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\">\r\n                      Birthday : <strong>{userDetails.user.Birthday}</strong>\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <label className=\"labels\">\r\n                      Gender : <strong>{userDetails.user.Gender}</strong>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h5>Profile Statistic</h5>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <Chart\r\n                className=\"pieChartComments\"\r\n                chartType=\"PieChart\"\r\n                data={data}\r\n                options={options}\r\n                width={\"100%\"}\r\n                height={\"200px\"}\r\n              />\r\n            </Col>\r\n\r\n            <Col xs={6}>\r\n              <Chart\r\n                className=\"pieChartComments\"\r\n                chartType=\"PieChart\"\r\n                data={dataRate}\r\n                options={optionsRate}\r\n                width={\"100%\"}\r\n                height={\"200px\"}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\WineProfile.js",["132","133","134","135","136","137","138","139","140"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./WineProfile.css\";\r\nimport { useState, useEffect } from \"react\";\r\n// import Cookies from \"universal-cookie\";\r\nimport { Button, Container, Row, Col, Form, Modal } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { faFilter } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  differenceInDays,\r\n  diffInHoursFunc,\r\n  diffInMinutesFunc,\r\n  diffInSecFunc,\r\n} from \"./Functions/functions\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst WineProfile = () => {\r\n  const { id } = useParams();\r\n  const [wine, setWine] = useState();\r\n  const [showComments, setShowComments] = useState(true);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [newRate, setNewRate] = useState(0);\r\n\r\n  const [faStarIcon, setFaStarIcon] = useState([\r\n    { class: \"noSelected\", item: 0 },\r\n    { class: \"noSelected\", item: 1 },\r\n    { class: \"noSelected\", item: 2 },\r\n    { class: \"noSelected\", item: 3 },\r\n    { class: \"noSelected\", item: 4 },\r\n  ]);\r\n\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n\r\n  useEffect(() => {\r\n    let num = faStarIcon.filter(function (e) {\r\n      return e.class !== \"noSelected\";\r\n    }).length;\r\n    setNewRate(num);\r\n    console.log(num);\r\n  }, [faStarIcon]);\r\n  //-------------- Get Wine info + Comments details ---------------------------\r\n  const getWine = () => {\r\n    fetch(\"http://localhost:4000/getWine/\" + id)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setWine(json);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getWine();\r\n  }, []);\r\n\r\n  const onCreateCommentHandler = () => {\r\n    console.log(newComment, userEmail, id);\r\n    let commentDetails = {\r\n      newComment: newComment,\r\n      userEmail: userEmail,\r\n      newRate: newRate,\r\n      id: id,\r\n    };\r\n    fetch(\"http://localhost:4000/newWineComment\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(commentDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setNewRate(0);\r\n        setNewComment(\"\");\r\n        getWine();\r\n      });\r\n  };\r\n\r\n  const onClickOnStarIcon = (item) => {\r\n    var newFaStarIcon = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      if (i < item + 1) {\r\n        newFaStarIcon.push({\r\n          class: \"Selected\",\r\n          item: i,\r\n        });\r\n      } else {\r\n        newFaStarIcon.push({\r\n          class: \"noSelected\",\r\n          item: i,\r\n        });\r\n      }\r\n    }\r\n    setFaStarIcon(newFaStarIcon);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {wine !== undefined && (\r\n        <div className=\"wine\">\r\n          <Container className=\"item\">\r\n            <div className=\"card card-body\">\r\n              <div className=\"media align-items-center align-items-lg-start text-center text-lg-left flex-column flex-lg-row\">\r\n                <Row>\r\n                  <Col xs={3}>\r\n                    <div className=\"mr-2 mb-3 mb-lg-0\">\r\n                      <img\r\n                        className=\"wineProfileImage\"\r\n                        src={wine.wine.ImageUrl}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs={9}>\r\n                    <div>\r\n                      <div className=\"media-body\">\r\n                        <h2 className=\"wineTitle\">{wine.wine.WineName}</h2>\r\n\r\n                        <ul className=\"list-inline list-inline-dotted mb-3 mb-xl-2\">\r\n                          <li className=\"list-inline-item\">\r\n                            <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                              {wine.wine.Type}\r\n                            </a>\r\n                          </li>\r\n                          <li className=\"list-inline-item\">\r\n                            <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                              {wine.wine.Color}\r\n                            </a>\r\n                          </li>\r\n                          <li className=\"list-inline-item\">\r\n                            <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                              {wine.wine.Year}\r\n                            </a>\r\n                          </li>\r\n                          <br />\r\n                          <li className=\"list-inline-item\">\r\n                            <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                              {wine.wine.Location} , {wine.wine.Country}\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"mt-3 mt-lg-0 ml-lg-3 text-center\">\r\n                        <div className=\"text-muted\">\r\n                          {\" \"}\r\n                          {wine.Comments.length} reviews{\" \"}\r\n                        </div>\r\n                        <div className=\"text-muted\">\r\n                          Total rate :{\" \"}\r\n                          {wine.total_rating === null\r\n                            ? 0\r\n                            : wine.total_rating.toFixed(2)}{\" \"}\r\n                          <FontAwesomeIcon\r\n                            className=\"starIcon\"\r\n                            icon={faStar}\r\n                            size=\"1x\"\r\n                          />{\" \"}\r\n                        </div>\r\n                        <br />\r\n                        {/* <h3 className=\"mb-0 font-weight-semibold\">\r\n                          {\" \"}\r\n                          Price : {wine.wine.Price}€\r\n                        </h3> */}\r\n\r\n                        <ul className=\"list-inline list-inline-dotted mb-0\">\r\n                          <li className=\"list-inline-item\">\r\n                            {\" \"}\r\n                            <strong>Grape : </strong> {wine.wine.Grapes}{\" \"}\r\n                          </li>\r\n                          <br />\r\n                          <li className=\"list-inline-item\">\r\n                            {\" \"}\r\n                            <strong>Winery by</strong>{\" \"}\r\n                            <a\r\n                              target=\"_blank\"\r\n                              href={`https://www.google.com/search?q=${wine.wine.Winery}`}\r\n                              data-abc=\"true\"\r\n                            >\r\n                              {\" \"}\r\n                              {wine.wine.Winery}{\" \"}\r\n                            </a>\r\n                          </li>\r\n                          <br /> <br />\r\n                        </ul>\r\n                        <strong>Wine discription</strong>\r\n                        <p className=\"mb-3\">{wine.wine.WineDescription}</p>\r\n\r\n                        <Button variant=\"warning\" title=\"Add to Card\">\r\n                          {/* <FontAwesomeIcon icon={faCartPlus} size=\"1x\" /> */}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"rowComment\">\r\n                  {/* <Col xs={2}></Col> */}\r\n                  <Col xs={12}>\r\n                    <div>\r\n                      <br />\r\n                      <span className=\"badge bg-white d-flex flex-row align-items-center\">\r\n                        <span className=\"text-primary\">\r\n                          Comments {showComments ? \"ON\" : \"OFF\"}{\" \"}\r\n                        </span>\r\n                        <div className=\"form-check form-switch\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"flexSwitchCheckChecked\"\r\n                            defaultChecked={true}\r\n                            onChange={(e) => {\r\n                              setShowComments(e.target.checked);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </span>\r\n                      {showComments && (\r\n                        <div>\r\n                          <h5>Comments & Rating</h5>\r\n                          <div className=\"d-flex flex-row add-comment-section mt-4 mb-4\">\r\n                            <textarea\r\n                              className=\"form-control mr-3\"\r\n                              placeholder=\"Leave comment\"\r\n                              value={newComment}\r\n                              onChange={(e) => {\r\n                                setNewComment(e.target.value);\r\n                              }}\r\n                            ></textarea>\r\n                          </div>\r\n                          <Form.Label>Rate&nbsp;wine&nbsp; </Form.Label>\r\n                          <br />\r\n                          {faStarIcon.map((icon) => (\r\n                            <FontAwesomeIcon\r\n                              className={icon.class}\r\n                              icon={faStar}\r\n                              size=\"1x\"\r\n                              onClick={() => onClickOnStarIcon(icon.item)}\r\n                            />\r\n                          ))}\r\n\r\n                          <strong>&nbsp;&nbsp;{newRate} / 5 rating</strong>\r\n\r\n                          <br />\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            type=\"button\"\r\n                            disabled={\r\n                              newComment.trim() === \"\" ||\r\n                              newComment.trim().length > 300 ||\r\n                              newRate === 0\r\n                            }\r\n                            onClick={onCreateCommentHandler}\r\n                          >\r\n                            Comment\r\n                          </button>\r\n                          <hr />\r\n                          {wine.Comments.map((comment) => (\r\n                            <div className=\"commented-section mt-2\">\r\n                              <div className=\"d-flex flex-row align-items-center commented-user\">\r\n                                <h5 className=\"mr-2\">{comment.user.Name}</h5>\r\n                                &nbsp;\r\n                                <span className=\"dot mb-1\"></span>\r\n                                &nbsp;\r\n                                <span className=\"mb-1 ml-2\">\r\n                                  {differenceInDays(\r\n                                    comment.comment.CommentDate\r\n                                  ) == 0\r\n                                    ? diffInHoursFunc(\r\n                                        comment.comment.CommentDate\r\n                                      ) === 0\r\n                                      ? diffInMinutesFunc(\r\n                                          comment.comment.CommentDate\r\n                                        ) === 0\r\n                                        ? diffInSecFunc(\r\n                                            comment.comment.CommentDate\r\n                                          ) + \" seconds\"\r\n                                        : diffInMinutesFunc(\r\n                                            comment.comment.CommentDate\r\n                                          ) + \" minutes\"\r\n                                      : diffInHoursFunc(\r\n                                          comment.comment.CommentDate\r\n                                        ) + \" hours\"\r\n                                    : differenceInDays(\r\n                                        comment.comment.CommentDate\r\n                                      ) + \" days\"}{\" \"}\r\n                                  ago\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"comment-text-sm\">\r\n                                <span>{comment.comment.Comment}</span>\r\n                              </div>\r\n                              <div>\r\n                                <span>\r\n                                  <strong>\r\n                                    {\" \"}\r\n                                    Rate : {comment.comment.Rating}{\" \"}\r\n                                    <FontAwesomeIcon\r\n                                      className=\"starIcon\"\r\n                                      icon={faStar}\r\n                                      size=\"1x\"\r\n                                    />\r\n                                  </strong>\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"reply-section\">\r\n                                <div className=\"d-flex flex-row align-items-center voting-icons\">\r\n                                  <i className=\"fa fa-sort-up fa-2x mt-3 hit-voting\"></i>\r\n                                  <i className=\"fa fa-sort-down fa-2x mb-3 hit-voting\"></i>\r\n                                </div>\r\n                              </div>\r\n                              <hr />\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WineProfile;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Card.js",["141","142","143"],"import React from \"react\";\r\nimport \"./Card.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Card = () => {\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [kindPayment, setKindPayment] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phoneNum, setPhoneNum] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const [userDetails, setUseretails] = useState([]);\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardDate, setCardDate] = useState(\"\");\r\n  const [cardCVV, setCardCVV] = useState(\"\");\r\n\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n  console.log(cookies.get(\"card\"));\r\n\r\n  // ------------ Get user Details -----------------\r\n  const getUser = () => {\r\n    fetch(`http://localhost:4000/getUser/${userEmail}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json.user);\r\n        setAddress(json.user.Address);\r\n        setPhoneNum(json.user.Mobile);\r\n        setUseretails([json]);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  var cardDetails =\r\n    cookies.get(\"card\") === \"\" || cookies.get(\"card\") === undefined\r\n      ? []\r\n      : cookies.get(\"card\").split(\"|\");\r\n\r\n  const [card, setCard] = useState(cardDetails);\r\n\r\n  // -------- Delete from Card ----------\r\n  const onDeletefromCard = (item) => {\r\n    var cardCookies = cookies.get(\"card\");\r\n    var cardArray = cardCookies.split(\"|\");\r\n    cardArray = cardArray.filter((word) => word !== item);\r\n\r\n    if (cardArray === [\"\"]) {\r\n      cookies.remove(\"card\");\r\n      // cookies.set(\"card\", undefined , { path: \"/\" });\r\n      setCard([]);\r\n    } else {\r\n      cookies.set(\"card\", cardArray.join(\"|\"), { path: \"/\" });\r\n      setCard(cardArray);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (card.length === 0) {\r\n      setTotalPrice(0);\r\n    } else {\r\n      var total_price = 0;\r\n      for (const key in card) {\r\n        total_price =\r\n          Number(total_price) +\r\n          Number(card[key].split(\",\")[5] * card[key].split(\",\")[7]);\r\n      }\r\n      setTotalPrice(total_price);\r\n    }\r\n  }, [card]);\r\n\r\n  const onCreateOrder = () => {\r\n    var wineList = [];\r\n    for (const key in card) {\r\n      wineList.push(card[key].split(\",\")[0]);\r\n    }\r\n    // console.log(totalPrice);\r\n    // console.log(userEmail);\r\n    // console.log(wineList)\r\n\r\n    let cardDetails = {\r\n      wineList: wineList,\r\n      email: userEmail,\r\n      totalPrice: totalPrice,\r\n    };\r\n    fetch(\"http://localhost:4000/completeOrder\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(cardDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        cookies.remove(\"card\");\r\n\r\n        setCard([]);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cardboth\">\r\n        <div className=\"product-details mr-2\">\r\n          <div className=\"d-flex flex-row align-items-center\">\r\n            <i className=\"fa fa-long-arrow-left\"></i>\r\n            <button\r\n              //   style=\"padding: 0; border: none; background: none;\"\r\n              className=\"ml-2\"\r\n            >\r\n              Continue Shopping\r\n            </button>\r\n          </div>\r\n          <hr />\r\n          <h6 className=\"mb-0\">Shopping cart</h6>\r\n\r\n          {card.length === 0 && (\r\n            <Alert className=\"emptyAlert\" variant=\"warning\">\r\n              The Card is Empty!\r\n            </Alert>\r\n          )}\r\n          {card.length !== 0 && (\r\n            <div>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <span>\r\n                  You have <strong>{card.length} items</strong> in your cart\r\n                </span>\r\n                <strong>Total Price : {totalPrice} €</strong>\r\n              </div>\r\n\r\n              {card.map((item) => (\r\n                <div className=\"d-flex justify-content-between align-items-center mt-3 p-2 items rounded\">\r\n                  <div className=\"d-flex flex-row\">\r\n                    <a href={`/wine/${item.split(\",\")[0]}`}>\r\n                      <img\r\n                        className=\"cardImage\"\r\n                        src={item.split(\",\")[6]}\r\n                        width=\"40\"\r\n                      />\r\n                    </a>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <div className=\"ml-2\">\r\n                      <span className=\"font-weight-bold d-block\">\r\n                        {item.split(\",\")[1]}\r\n                      </span>\r\n                      <span className=\"spec\">\r\n                        {item.split(\",\")[4]} , {item.split(\",\")[3]}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row align-items-center\">\r\n                    <span className=\"d-block\">\r\n                      {/* {formatDate(new Date(item.card.CardDate))}{\" \"} */}\r\n                      &nbsp;&nbsp;&nbsp;\r\n                    </span>{\" \"}\r\n                    &nbsp; <span className=\"d-block\">{item.split(\",\")[7]}</span>\r\n                    <strong>&nbsp; x &nbsp;</strong>\r\n                    <span className=\"d-block ml-5 font-weight-bold\">\r\n                      {item.split(\",\")[5]}\r\n                      &nbsp; = &nbsp;\r\n                    </span>\r\n                    <span className=\"d-block ml-5 font-weight-bold\">\r\n                      <strong>\r\n                        {item.split(\",\")[7] * item.split(\",\")[5]} &nbsp;€\r\n                      </strong>\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <FontAwesomeIcon\r\n                        className=\"deleteIcon\"\r\n                        onClick={() => {\r\n                          onDeletefromCard(item);\r\n                        }}\r\n                        icon={faTrash}\r\n                        size=\"1x\"\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {userDetails.length !== 0 && (\r\n          <div className=\"col-md-2\">\r\n            <br />\r\n            <br />\r\n            Continue with Order\r\n            <br />\r\n            <div className=\"payment-info\">\r\n              Personal Details\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <label className=\"credit-card-label\">Shipping location</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={address}\r\n                    className=\"form-control credit-inputs\"\r\n                    placeholder=\"Atiki,Greece 31\"\r\n                    onChange={(e) => {\r\n                      setAddress(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label className=\"credit-card-label\">Zip Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control credit-inputs\"\r\n                    placeholder=\"15231\"\r\n                    onChange={(e) => {\r\n                      setZipCode(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                {zipCode !== \"\" && zipCode.length !== 5 && (\r\n                  <p className=\"alertMessage\">Wrong Zip Code. Max length 5.</p>\r\n                )}\r\n                <br />\r\n                <div className=\"col-md-6\">\r\n                  <label className=\"credit-card-label\">Phone Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={phoneNum}\r\n                    className=\"form-control credit-inputs\"\r\n                    placeholder=\"6999999999\"\r\n                    onChange={(e) => {\r\n                      setPhoneNum(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                {phoneNum !== \"\" &&\r\n                  (isNaN(phoneNum) ||\r\n                    phoneNum.length > 10 ||\r\n                    phoneNum.length < 10) && (\r\n                    <p className=\"alertMessage\">Wrong Phone Number</p>\r\n                  )}\r\n              </div>\r\n              <hr className=\"line\" />\r\n              Kind of Payment\r\n              <div>\r\n                <label className=\"credit-card-label\">Name on card</label>\r\n                <select\r\n                  className=\"form-control credit-inputs\"\r\n                  onChange={(e) => {\r\n                    setKindPayment(e.target.value);\r\n                  }}\r\n                >\r\n                  <option value=\"delivery\">Pay on delivery</option>\r\n                  <option value=\"deposit\">Bank deposit</option>\r\n                  <option value=\"card\">Payment by card</option>\r\n                </select>\r\n              </div>\r\n              {kindPayment === \"card\" && (\r\n                <div>\r\n                  <hr className=\"line\" />\r\n                  Card Details\r\n                  <div>\r\n                    <label className=\"credit-card-label\">Card number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control credit-inputs\"\r\n                      // maxLength=\"19\"\r\n                      value={cardNumber}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value.length);\r\n                        if (\r\n                          (!isNaN(e.target.value[e.target.value.length - 1]) ||\r\n                            e.target.value === \"\") &&\r\n                          e.target.value.length < 16\r\n                        ) {\r\n                          setCardNumber(e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <label className=\"credit-card-label\">Date</label>\r\n                      <input\r\n                        type=\"search\"\r\n                        value={\r\n                          cardDate.length == 2\r\n                            ? cardDate.slice(0, 2) + \"/\"\r\n                            : cardDate\r\n                        }\r\n                        className=\"form-control credit-inputs\"\r\n                        placeholder=\"12/24\"\r\n                        onChange={(e) => {\r\n                          if (e.target.value.length < 6) {\r\n                            var testArray = e.target.value.split(\"/\");\r\n                            var newEtargetValue = \"\";\r\n                            for (const key in testArray) {\r\n                              newEtargetValue =\r\n                                newEtargetValue + testArray[key];\r\n                            }\r\n                            console.log(newEtargetValue);\r\n                            if (!isNaN(newEtargetValue)) {\r\n                              setCardDate(e.target.value);\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label className=\"credit-card-label\">CVV</label>\r\n                      <input\r\n                        type=\"search\"\r\n                        className=\"form-control credit-inputs\"\r\n                        placeholder=\"342\"\r\n                        value={cardCVV}\r\n                        onChange={(e) => {\r\n                          if (\r\n                            !isNaN(e.target.value) &&\r\n                            e.target.value.length < 4\r\n                          ) {\r\n                            setCardCVV(e.target.value);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <hr className=\"line\" />\r\n              Sumary\r\n              <div className=\"d-flex justify-content-between information\">\r\n                <span>Subtotal</span>\r\n                <span> {totalPrice} €</span>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between information\">\r\n                <span>Shipping</span>\r\n                <span>\r\n                  {totalPrice > 50 || totalPrice === 0 ? \"0 €\" : \"3 €\"}\r\n                </span>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between information\">\r\n                <span>Total(Incl. taxes)</span>\r\n                <span>\r\n                  {totalPrice > 50 || totalPrice === 0\r\n                    ? totalPrice\r\n                    : totalPrice + 3}{\" \"}\r\n                  €\r\n                </span>\r\n              </div>\r\n              {/* <input\r\n                    type=\"number\"\r\n                    name=\"totalPrice\"\r\n                    value=\"{{total_price}}\"\r\n                  /> */}\r\n              <button\r\n                disabled={card.length === 0}\r\n                onClick={onCreateOrder}\r\n                className=\"btn btn-primary btn-block d-flex justify-content-between mt-3\"\r\n              >\r\n               \r\n                <span>\r\n                  Complete Order<i className=\"fa fa-long-arrow-right ml-1\"></i>\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\History.js",["144","145","146","147"],"import React from \"react\";\r\nimport \"./History.css\";\r\nimport \"./Card.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dateFormater, addDays } from \"./Functions/functions\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst History = () => {\r\n  const [history, setHistory] = useState([]);\r\n  // const [wines, setWines] = useState([]);\r\n\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n\r\n  const getHistory = () => {\r\n    let userDetails = {\r\n      email: userEmail,\r\n    };\r\n    fetch(\"http://localhost:4000/getHistory\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(userDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        var historyArray = [];\r\n        for (const key in json.history) {\r\n          //   console.log(json.history[key].WinesList);\r\n          var winesArray = [];\r\n          for (const key1 in json.wines) {\r\n            // console.log(json.wines[key1]._id);\r\n\r\n            if (json.history[key].WinesList.includes(json.wines[key1]._id)) {\r\n              winesArray.push(json.wines[key1]);\r\n            }\r\n          }\r\n          historyArray.push({\r\n            history: json.history[key],\r\n            wines: winesArray,\r\n          });\r\n        }\r\n        console.log(historyArray);\r\n        setHistory(historyArray);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"HistoryOrderTable\">History Order Table</h3>\r\n      <Table striped bordered hover className=\"tableHistory\">\r\n        <thead>\r\n          <tr>\r\n            <th>Wine Names</th>\r\n            <th>Bootle Price</th>\r\n            <th>Amount</th>\r\n            <th>Total Price</th>\r\n            <th>Order Date</th>\r\n            <th>Shipping Date</th>\r\n            <th>Address</th>\r\n            <th>Payment Kind</th>\r\n            <th>Extra Details</th>\r\n          </tr>\r\n        </thead>\r\n        {history.length !== 0 && (\r\n          <tbody>\r\n            {history.map((item) => (\r\n              <tr>\r\n                <td>\r\n                  {item.wines.map((wine) => (\r\n                    <strong>\r\n                      <a href={`/wine/${wine._id}`}>{wine.WineName}</a>\r\n                      <br />\r\n                    </strong>\r\n                  ))}\r\n                </td>\r\n                <td>\r\n                  {item.wines.map((wine) => (\r\n                    <strong>\r\n                      {wine.Price} €\r\n                      <br />\r\n                    </strong>\r\n                  ))}\r\n                </td>\r\n                <td>Otto</td>\r\n                <td>\r\n                  <strong>{item.history.Price} €</strong>\r\n                </td>\r\n                <td>\r\n                  <strong>{dateFormater(new Date(item.history.Date))}</strong>\r\n                </td>\r\n                <td>\r\n                  {dateFormater(\r\n                    new Date(\r\n                      new Date(item.history.Date).setDate(\r\n                        new Date(item.history.Date).getDate() + 3\r\n                      )\r\n                    )\r\n                  )}\r\n                </td>\r\n                <td>Otto</td>\r\n                <td>@mdo</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        )}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Blog.js",["148","149","150","151","152","153","154","155","156","157","158"],"import React from \"react\";\r\nimport \"./Blog.css\";\r\nimport { Button, OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { dateFormater, getAge } from \"./Functions/functions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Modal,\r\n  Alert,\r\n  PageItem,\r\n} from \"react-bootstrap\";\r\n\r\nconst Blog = () => {\r\n  const [initialBlogs, setInitialBlogs] = useState([]);\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  // --------------- Filter Hooks ------------------\r\n  const [blogSearch, setBlogSearch] = useState(\"\");\r\n  const [topReviewSearch, setTopReviewSearch] = useState(false);\r\n  const [myQuestion, setMyQuestion] = useState(false);\r\n\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n\r\n  // --------- get All Blogs ----------------\r\n  const getBlogs = () => {\r\n    fetch(`http://localhost:4000/getBlogs`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log([json]);\r\n        setBlogs([json]);\r\n        setInitialBlogs([json]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBlogs();\r\n    getUser(userEmail);\r\n  }, []);\r\n\r\n  const getUser = (email) => {\r\n    setUser([]);\r\n    fetch(`http://localhost:4000/getUser/${email}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setUser([json]);\r\n        setUserName(json.user.Name);\r\n        setUserId(json.user._id);\r\n      });\r\n  };\r\n\r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      {user.length !== 0 && (\r\n        <div>\r\n          <Popover.Header as=\"h3\">{user[0].user.Name}</Popover.Header>\r\n          <Popover.Body>\r\n            Email : <strong>{user[0].user.Email}</strong> <br />\r\n            Tel. : <strong>{user[0].user.Mobile}</strong> <br />\r\n            Address : <strong>{user[0].user.Address}</strong> <br />\r\n            Age : <strong>\r\n              {getAge(new Date(user[0].user.Birthday))}\r\n            </strong>{\" \"}\r\n            <br />\r\n          </Popover.Body>\r\n        </div>\r\n      )}\r\n    </Popover>\r\n  );\r\n\r\n  const onCreateQuestion = () => {\r\n    console.log(question, userEmail, userId, userName);\r\n\r\n    let blogDetails = {\r\n      email: userEmail,\r\n      id: userId,\r\n      Name: userName,\r\n      question: question,\r\n    };\r\n    fetch(\"http://localhost:4000/createQuestion\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(blogDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setQuestion(\"\");\r\n        getBlogs();\r\n      });\r\n  };\r\n\r\n  const filterQuestion = () => {\r\n    var oldBlogs = initialBlogs;\r\n    var newBlogArray = [];\r\n    var newArray = oldBlogs[0].numberOfApplies.filter(function (el) {\r\n      return el.blogs.Question.includes(blogSearch);\r\n    });\r\n\r\n    if (myQuestion) {\r\n      newArray = newArray.filter(function (el) {\r\n        return el.blogs.UserEmail.includes(userEmail);\r\n      });\r\n    }\r\n\r\n    if (topReviewSearch) {\r\n      newArray.sort((a, b) => {\r\n        return b.numberOfApplies - a.numberOfApplies;\r\n      });\r\n    }\r\n    console.log(newArray);\r\n\r\n    newBlogArray.push({ numberOfApplies: newArray });\r\n    setBlogs(newBlogArray);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const onClearHandler = () => {\r\n    setMyQuestion(false);\r\n    setTopReviewSearch(false);\r\n    setBlogSearch(\"\");\r\n    setBlogs(initialBlogs);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"blogAndFilter\">\r\n      <div className=\"applieToQuestionFilters\">\r\n        <h4>Search&nbsp;for&nbsp;comments</h4>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Form>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Filter Blogs</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Filter Blog\"\r\n                  value={blogSearch}\r\n                  onChange={(e) => {\r\n                    setBlogSearch(e.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n              <br />\r\n              <div className=\"rateCheckBox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={topReviewSearch}\r\n                  onChange={(e) => {\r\n                    setTopReviewSearch(e.target.checked);\r\n                  }}\r\n                />\r\n                <label className=\"rateLabel\">\r\n                  &nbsp;Search&nbsp;by&nbsp;top&nbsp;question.\r\n                </label>\r\n              </div>\r\n              <div className=\"rateCheckBox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={myQuestion}\r\n                  onChange={(e) => {\r\n                    setMyQuestion(e.target.checked);\r\n                  }}\r\n                />\r\n                <label className=\"rateLabel\">&nbsp;My&nbsp;questions.</label>\r\n              </div>\r\n              <br />\r\n              \r\n              <hr />\r\n              <Row>\r\n                <Col xs={4}>\r\n                  <Button variant=\"warning\" onClick={onClearHandler}>\r\n                    Clear\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Button variant=\"success\" onClick={filterQuestion}>\r\n                    Search\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              &nbsp;\r\n            </Form>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <div className=\"container py-4\">\r\n        <div className=\"col-md-10 col-lg-8 m-auto\">\r\n          <div className=\"bg-white rounded-3 shadow-sm p-4\">\r\n            <h4 className=\"mb-4\">Leave a Question</h4>\r\n\r\n            {/* <div className=\"alert alert-danger\" role=\"alert\"></div> */}\r\n\r\n            <div className=\"d-flex\">\r\n              <img\r\n                className=\"rounded-circle me-3\"\r\n                src=\"https://via.placeholder.com/128/{{this.randomColor}}/ffcbde.png?text={{this.StaringName}}\"\r\n              />\r\n              <div className=\"flex-grow-1\">\r\n                <div className=\"hstack gap-2 mb-1\">\r\n                  <a href=\"#\" className=\"fw-bold link-dark\"></a>\r\n                </div>\r\n                <div className=\"form-floating mb-3\">\r\n                  <textarea\r\n                    className=\"form-control w-100\"\r\n                    value={question}\r\n                    onChange={(e) => {\r\n                      setQuestion(e.target.value);\r\n                    }}\r\n                    required\r\n                  ></textarea>\r\n                  <label>Leave a message here</label>\r\n                </div>\r\n\r\n                <div className=\"hstack justify-content-end gap-2\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-link link-secondary text-uppercase\"\r\n                    title=\"Clear form\"\r\n                    onClick={() => {\r\n                      setQuestion(\"\");\r\n                    }}\r\n                  >\r\n                    Clear\r\n                  </button>\r\n                  <button\r\n                    disabled={question.trim() === \"\"}\r\n                    className=\"btn btn-sm btn-primary text-uppercase\"\r\n                    onClick={onCreateQuestion}\r\n                  >\r\n                    comment\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n            <hr />\r\n            <h4 className=\"mb-4\">Questions</h4>\r\n\r\n            <div></div>\r\n            <br />\r\n            <br />\r\n            <hr />\r\n\r\n            <div className=\"\">\r\n              <div className=\"py-3\">\r\n                {blogs.length !== 0 && (\r\n                  <div className=\"table-wrapper\">\r\n                    {blogs[0].numberOfApplies.map((blog) => (\r\n                      <div className=\"d-flex comment\">\r\n                        <img\r\n                          className=\"rounded-circle me-3\"\r\n                          src={`https://via.placeholder.com/130/${Math.floor(\r\n                            Math.random() * 16777215\r\n                          ).toString(16)}/ffcbde.png?text=${\r\n                            blog.blogs.UserName.split(\" \")[0][0] +\r\n                            blog.blogs.UserName.split(\" \")[1][0]\r\n                          }`}\r\n                        />\r\n                        <div className=\"flex-grow-1 ms-3\">\r\n                          <div className=\"mb-1\">\r\n                            <OverlayTrigger\r\n                              trigger={user.length === 0 ? \"click\" : \"focus\"}\r\n                              placement=\"right\"\r\n                              overlay={popover}\r\n                            >\r\n                              <Button\r\n                                onClick={() => {\r\n                                  getUser(blog.blogs.UserEmail);\r\n                                }}\r\n                                className=\"popoverButton\"\r\n                              >\r\n                                {blog.blogs.UserName}\r\n                              </Button>\r\n                            </OverlayTrigger>\r\n                            <FontAwesomeIcon\r\n                              className=\"eyeFaIcon\"\r\n                              title={`Reply to ${blog.blogs.UserName}`}\r\n                              onClick={() => {\r\n                                window.open(`/blogInfo/${blog.blogs._id}`);\r\n                              }}\r\n                              icon={faReply}\r\n                              size=\"lg\"\r\n                            />{\" \"}\r\n                            <br />{\" \"}\r\n                            <span className=\"text-muted text-nowrap\">\r\n                              {dateFormater(new Date(blog.blogs.QuestionDate))}\r\n                            </span>\r\n                          </div>\r\n\r\n                          <div className=\"mb-2 css\">{blog.blogs.Question}</div>\r\n                          <div className=\"hstack align-items-center mb-2\">\r\n                            <a className=\"link-primary me-2\" href=\"#\">\r\n                              <i className=\"zmdi zmdi-thumb-up\"></i>\r\n                            </a>\r\n                            <span className=\"me-3 small\">\r\n                              <strong>{blog.numberOfApplies}</strong> aplies.\r\n                            </span>\r\n                            <a className=\"link-secondary me-4\" href=\"#\">\r\n                              <i className=\"zmdi zmdi-thumb-down\"></i>\r\n                            </a>\r\n\r\n                            {blog.blogs.UserEmail === userEmail && (\r\n                              <button\r\n                                className=\"btn btn-danger\"\r\n                                title=\"Delete Question!\"\r\n                              >\r\n                                Delete\r\n                              </button>\r\n                            )}\r\n\r\n                            <div\r\n                              className=\"modal fade\"\r\n                              id=\"exampleModal\"\r\n                              role=\"dialog\"\r\n                              aria-labelledby=\"exampleModalLabel\"\r\n                              aria-hidden=\"true\"\r\n                            >\r\n                              <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                  <div className=\"modal-header\">\r\n                                    <h5\r\n                                      className=\"modal-title\"\r\n                                      id=\"exampleModalLabel\"\r\n                                    >\r\n                                      Modal title\r\n                                    </h5>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"close\"\r\n                                      data-dismiss=\"modal\"\r\n                                      aria-label=\"Close\"\r\n                                    >\r\n                                      <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <a\r\n                            className=\"fw-bold d-flex align-items-center\"\r\n                            href=\"#\"\r\n                          >\r\n                            <i className=\"zmdi zmdi-chevron-down fs-4 me-3\"></i>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Functions\\functions.js",[],"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\BlogInfo.js",["159","160","161","162","163","164","165","166","167","168","169","170","171"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./BlogInfo.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\n// import { Button, Container, Row, Col, Form, Modal } from \"react-bootstrap\";\r\nimport { differenceInDays } from \"./Functions/functions\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { faFilter } from \"@fortawesome/free-solid-svg-icons\";\r\nconst BlogInfo = () => {\r\n  const [blogInfo, setBlogInfo] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [apply, setApply] = useState(\"\");\r\n  const { id } = useParams();\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n\r\n  // ----------- get aplies To question with spesific id -----------\r\n  const getApliesToQuestion = () => {\r\n    fetch(`http://localhost:4000/getApliesToQuestion/${id}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setBlogInfo([json]);\r\n      });\r\n  };\r\n\r\n  // --------------- get user details -----------\r\n  const getUser = (email) => {\r\n    var emailForSearch = email === undefined ? userEmail : email;\r\n    fetch(`http://localhost:4000/getUser/${emailForSearch}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUser([json]);\r\n        console.log([json]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getApliesToQuestion();\r\n    getUser();\r\n  }, []);\r\n\r\n  const applyToQuestion = () => {};\r\n\r\n  // ----------- on Apply Handler -------------\r\n  const onApplyHandler = () => {\r\n\r\n    let applyDetails = {\r\n      apply: apply.trim(),\r\n      blogQuestionId: blogInfo[0].blogQuestions[0]._id,\r\n      userId: user[0].user._id,\r\n      userName: user[0].user.Name,\r\n      userEmail: user[0].user.Email,\r\n    };\r\n    fetch(\"http://localhost:4000/applyToQuestion\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(applyDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        getApliesToQuestion();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container py-4\">\r\n        <div className=\"col-md-10 col-lg-8 m-auto\">\r\n          {blogInfo.length !== 0 && user.length !== 0 && (\r\n            <div className=\"bg-white rounded-3 shadow-sm p-4\">\r\n              <h4 className=\"mb-4\">\r\n                {blogInfo[0].aplyQuestion.length}&nbsp; Comments\r\n              </h4>\r\n\r\n              <div className=\"\">\r\n                <div className=\"py-3\">\r\n                  <div className=\"d-flex comment\">\r\n                    <img\r\n                      className=\"rounded-circle me-3\"\r\n                      src={`https://via.placeholder.com/128/${Math.floor(\r\n                        Math.random() * 16777215\r\n                      ).toString(16)}/ffcbde.png?text=${\r\n                        user[0].user.Name.split(\" \")[0][0] +\r\n                        user[0].user.Name.split(\" \")[1][0]\r\n                      }`}\r\n                    />\r\n                    <div className=\"flex-grow-1 ms-3\">\r\n                      <div className=\"mb-1\">\r\n                        <a href=\"#\" className=\"fw-bold link-dark me-1\">\r\n                          {blogInfo[0].blogQuestions[0].UserName}\r\n                        </a>{\" \"}\r\n                        <span className=\"text-muted text-nowrap\">\r\n                          {differenceInDays(\r\n                            blogInfo[0].blogQuestions[0].QuestionDate\r\n                          )}{\" \"}\r\n                          days ago\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"mb-2\">\r\n                        {blogInfo[0].blogQuestions[0].Question}\r\n                      </div>\r\n                      <div className=\"hstack align-items-center mb-2\">\r\n                        <a className=\"link-primary me-2\" href=\"#\">\r\n                          <i className=\"zmdi zmdi-thumb-up\"></i>\r\n                        </a>\r\n                        <span className=\"me-3 small\">55</span>\r\n                        <a className=\"link-secondary me-4\" href=\"#\">\r\n                          <i className=\"zmdi zmdi-thumb-down\"></i>\r\n                        </a>\r\n                        {/* <a className=\"link-secondary small\" href=\"#\">\r\n                          REPLY\r\n                        </a> */}\r\n                        <a className=\"link-danger small ms-3\" href=\"#\">\r\n                          DELETE\r\n                        </a>\r\n                      </div>\r\n                      {/* <a className=\"fw-bold d-flex align-items-center\" href=\"#\">\r\n                        <i className=\"zmdi zmdi-chevron-down fs-4 me-3\"></i>\r\n                        <span>Hide Replies</span>\r\n                      </a> */}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-white rounded-3 shadow-sm p-4 mb-4\">\r\n                    <div className=\"d-flex\">\r\n                      <img\r\n                        className=\"rounded-circle me-3\"\r\n                        src={`https://via.placeholder.com/128/${Math.floor(\r\n                          Math.random() * 16777215\r\n                        ).toString(16)}/ffcbde.png?text=${\r\n                          user[0].user.Name.split(\" \")[0][0] +\r\n                          user[0].user.Name.split(\" \")[1][0]\r\n                        }`}\r\n                      />\r\n                      <div className=\"flex-grow-1\">\r\n                        <div className=\"hstack gap-2 mb-1\">\r\n                          <a href=\"#\" className=\"fw-bold link-dark\"></a>\r\n                        </div>\r\n\r\n                        <div className=\"form-floating mb-3\">\r\n                          <textarea\r\n                            className=\"form-control w-100\"\r\n                            placeholder=\"Leave a comment here\"\r\n                            value={apply}\r\n                            onChange={(e) => {\r\n                              setApply(e.target.value);\r\n                            }}\r\n                            required\r\n                          ></textarea>\r\n                          <label>Aplie here...</label>\r\n                        </div>\r\n                        <div className=\"hstack justify-content-end gap-2\">\r\n                          <button\r\n                            disabled={apply.trim() === \"\"}\r\n                            className=\"btn btn-sm btn-primary text-uppercase\"\r\n                            onClick={onApplyHandler}\r\n                          >\r\n                            comment\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"comment-replies mt-4 bg-light p-3 rounded\">\r\n                      <h6 className=\"mb-4\">\r\n                        {/* {{number.number}}  */}\r\n                        {blogInfo[0].aplyQuestion.length}&nbsp; Aplies to{\" \"}\r\n                        {blogInfo[0].blogQuestions[0].UserName}\r\n                        <strong>{/* {{number.name}} */}</strong>{\" \"}\r\n                      </h6>\r\n\r\n                      {blogInfo[0].aplyQuestion.map((aply) => (\r\n                        <div className=\"d-flex py-2\">\r\n                          <img\r\n                            className=\"rounded-circle me-3\"\r\n                            src={`https://via.placeholder.com/128/${Math.floor(\r\n                              Math.random() * 16777215\r\n                            ).toString(16)}/7f00ff.png?text=${\r\n                              aply.AplierName[0] +\r\n                              aply.AplierName.split(\" \")[1][0]\r\n                            }`}\r\n                          />\r\n                          <div className=\"flex-grow-1 ms-3\">\r\n                            <div className=\"mb-1\">\r\n                              <a\r\n                                href=\"/profilInfo/{{this.AplierId}}\"\r\n                                className=\"fw-bold link-dark pe-1\"\r\n                              >\r\n                                {aply.AplierName}\r\n                              </a>{\" \"}\r\n                              <span className=\"text-muted text-nowrap\">\r\n                                {differenceInDays(aply.AplyDate)} day ago\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"mb-2\">{aply.Aply}</div>\r\n                            <div className=\"hstack align-items-center\">\r\n                              <a className=\"link-secondary me-2\" href=\"#\">\r\n                                <i className=\"zmdi zmdi-thumb-up\"></i>\r\n                              </a>\r\n                              {/* <span className=\"me-3 small\">1</span> */}\r\n                              <a className=\"link-secondary me-4\" href=\"#\">\r\n                                <i className=\"zmdi zmdi-thumb-down\"></i>\r\n                              </a>\r\n                              {/* <a className=\"link-secondary small\" href=\"#\">\r\n                                REPLY\r\n                              </a> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogInfo;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\ChangePassword.js",[],"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\EditProfile.js",["172"],"import React from \"react\";\r\nimport \"./EditProfile.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { validateEmail } from \"./Functions/functions\";\r\n// import { Container } from \"react-bootstrap\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst EditProfile = () => {\r\n  const [user, setUser] = useState([]);\r\n  const [newFirstName, setNewFirstName] = useState(\"\");\r\n  const [newLastName, setNewLastName] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [newMobile, setNewMobile] = useState(\"\");\r\n  const [newAddress , setNewAddress] = useState(\"\")\r\n\r\n  const cookies = new Cookies();\r\n  var userEmail = cookies.get(\"email\");\r\n\r\n  const getUser = (email) => {\r\n    var emailForSearch = email === undefined ? userEmail : email;\r\n    fetch(`http://localhost:4000/getUser/${emailForSearch}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setUser([json]);\r\n        console.log([json]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const edit = (firstName, lastName, address, mobile) => {\r\n    let userDetails = {\r\n      name: firstName + \" \" + lastName,\r\n      address: address,\r\n      mobile: mobile,\r\n      email: userEmail\r\n    };\r\n    fetch(\"http://localhost:4000/editProfile\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(userDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        setNewFirstName(\"\");\r\n        setNewLastName(\"\");\r\n        setNewEmail(\"\");\r\n        setNewMobile(\"\");\r\n        getUser();\r\n      });\r\n  };\r\n\r\n  const onEditHandler = () => {\r\n    var firstName =\r\n      newFirstName === \"\"\r\n        ? user[0].user.Name.split(\" \")[0]\r\n        : newFirstName.trim();\r\n    var lastName =\r\n      newLastName === \"\" ? user[0].user.Name.split(\" \")[1] : newLastName.trim();\r\n   // var email = newEmail === \"\" ? user[0].user.Email : newEmail.trim();\r\n    var mobile = newMobile === \"\" ? user[0].user.Mobile : newMobile.trim();\r\n    var address = newAddress ===\"\" ? user[0].user.Address : newAddress.trim()\r\n    edit(firstName, lastName, address, mobile);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {user.length !== 0 && (\r\n        <div className=\"mainDiv\">\r\n          <div className=\"cardStyle\">\r\n            <h2 className=\"formTitle\">Edit your Profile</h2>\r\n\r\n            <Container>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <div className=\"inputDiv\">\r\n                    <label className=\"inputLabel\">First Name</label>\r\n                    <input\r\n                      value={newFirstName}\r\n                      type=\"text\"\r\n                      id=\"editText\"\r\n                      placeholder={user[0].user.Name.split(\" \")[0]}\r\n                      onChange={(e) => {\r\n                        setNewFirstName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {newFirstName !== \"\" && newFirstName.length < 5 && (\r\n                    <p className=\"alertMessage\">\r\n                      {\" \"}\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <strong>Min 5 characters.</strong>{\" \"}\r\n                    </p>\r\n                  )}\r\n                </Col>{\" \"}\r\n                <Col xs={6}>\r\n                  <div className=\"buttonWrapper\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      id=\"submitButton\"\r\n                      disabled={\r\n                        (newFirstName !== \"\" && newFirstName.length < 5) ||\r\n                        newFirstName === \"\"\r\n                      }\r\n                      onClick={onEditHandler}\r\n                      className=\"submitButton pure-button pure-button-primary\"\r\n                    >\r\n                      <span>Edit First Name</span>\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n              </Row>{\" \"}\r\n              <hr />\r\n              <Row>\r\n                <Col xs={6}>\r\n                  {\" \"}\r\n                  <div className=\"inputDiv\">\r\n                    <label className=\"inputLabel\">Last Name</label>\r\n                    <input\r\n                      value={newLastName}\r\n                      type=\"text\"\r\n                      id=\"editText\"\r\n                      placeholder={user[0].user.Name.split(\" \")[1]}\r\n                      onChange={(e) => {\r\n                        setNewLastName(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {newLastName !== \"\" && newLastName.length < 5 && (\r\n                    <p className=\"alertMessage\">\r\n                      {\" \"}\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <strong>Min 5 characters.</strong>{\" \"}\r\n                    </p>\r\n                  )}\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <div className=\"buttonWrapper\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      id=\"submitButton\"\r\n                      disabled={\r\n                        (newLastName !== \"\" && newLastName.length < 5) ||\r\n                        newLastName === \"\"\r\n                      }\r\n                      onClick={onEditHandler}\r\n                      className=\"submitButton pure-button pure-button-primary\"\r\n                    >\r\n                      <span>Edit Last Name</span>\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <div className=\"inputDiv\">\r\n                    <label className=\"inputLabel\">Address</label>\r\n                    <input\r\n                      value={newAddress}\r\n                      type=\"text\"\r\n                      id=\"editText\"\r\n                      placeholder={user[0].user.Address}\r\n                      onChange={(e) => {\r\n                        setNewAddress(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {/* {newAddress !== \"\"  && (\r\n                    <p className=\"alertMessage\">\r\n                      {\" \"}\r\n                      Email must iclude '@'' and '.'{\" \"}\r\n                    </p>\r\n                  )} */}\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <div className=\"buttonWrapper\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      id=\"submitButton\"\r\n                      disabled={\r\n                        (newEmail !== \"\" && newEmail.length < 5) ||\r\n                        newEmail === \"\" ||\r\n                        !validateEmail(newEmail)\r\n                      }\r\n                      onClick={onEditHandler}\r\n                      className=\"submitButton pure-button pure-button-primary\"\r\n                    >\r\n                      <span>Edit Email</span>\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n              </Row>{\" \"}\r\n              <hr />\r\n              <Row>\r\n                <Col xs={6}>\r\n                  {\" \"}\r\n                  <div className=\"inputDiv\">\r\n                    <label className=\"inputLabel\">Mobile</label>\r\n                    <input\r\n                      value={newMobile}\r\n                      type=\"text\"\r\n                      id=\"editText\"\r\n                      placeholder={user[0].user.Mobile}\r\n                      onChange={(e) => {\r\n                        setNewMobile(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <div className=\"buttonWrapper\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      id=\"submitButton\"\r\n                      disabled={\r\n                        (newMobile !== \"\" &&\r\n                          (newMobile.length < 10 || newMobile.length > 10)) ||\r\n                        newMobile === \"\" ||\r\n                        newMobile[0] !== \"6\" ||\r\n                        newMobile[1] !== \"9\" ||\r\n                        isNaN(newMobile)\r\n                      }\r\n                      onClick={onEditHandler}\r\n                      className=\"submitButton pure-button pure-button-primary\"\r\n                    >\r\n                      <span>Edit Mobile</span>\r\n                    </button>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\AddWine.js",["173","174","175","176","177","178"],"import React from \"react\";\r\nimport \"./AddWine.css\";\r\nimport { Container, Col, Row, Button, Modal, Alert } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst AddWine = () => {\r\n  const allGrapes = [\r\n    \"Prosecco\",\r\n    \"Malagouzia\",\r\n    \"Asurtiko\",\r\n    \"Xinomauro\",\r\n    \"Sauvignon Blanc\",\r\n    \"Mosxofilero\",\r\n    \"Chardonnay\",\r\n    \"Merlot\",\r\n    \"Cabernet Sauvignon\",\r\n    \"Mosxato\",\r\n    \"Agiorgitiko\",\r\n    \"Maurodafni\",\r\n    \"Ponot Noir\",\r\n    \"Roditis\",\r\n    \"Pinot Grigio\",\r\n    \"Malbec\",\r\n  ];\r\n  const allTypes = [\"Dry\", \"Semi-sweet\", \"Sweet\", \"Semi-dry\"];\r\n  const allColors = [\"Red\", \"White\", \"Roze\"];\r\n  var allyears = [];\r\n  for (let i = 1950; i < new Date().getFullYear() + 1; i++) {\r\n    allyears.push(i);\r\n  }\r\n\r\n  const [wineName, setWineName] = useState(\"\");\r\n  const [Type, setType] = useState(allTypes[0]);\r\n  const [color, setColor] = useState(allColors[0]);\r\n  const [year, setYear] = useState(allyears[0]);\r\n  const [grape, setGrape] = useState(allGrapes[0]);\r\n  const [winery, setWinery] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [discription, setDiscription] = useState(\"\");\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [activeAlert, setActiveAlert] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const onClearHandler = () => {\r\n    setWineName(\"\");\r\n    setType(allTypes[0]);\r\n    setColor(allColors[0]);\r\n    setYear(allyears[0]);\r\n    setGrape(allGrapes[0]);\r\n    setWinery(\"\");\r\n    setPrice(\"\");\r\n    setCountry(\"\");\r\n    setLocation(\"\");\r\n    setDiscription(\"\");\r\n    setImageURL(\"\");\r\n  };\r\n\r\n  const onAddWineHandler = () => {\r\n    // handleClose();\r\n    // console.log(\r\n    //   wineName,\r\n    //   Type,\r\n    //   color,\r\n    //   year,\r\n    //   grape,\r\n    //   winery,\r\n    //   price,\r\n    //   country,\r\n    //   location,\r\n    //   discription,\r\n    //   imageURL\r\n    // );\r\n\r\n    let wineDetails = {\r\n      wineName: wineName,\r\n      Type: Type,\r\n      color: color,\r\n      year: year,\r\n      grape: grape,\r\n      winery: winery,\r\n      price: price,\r\n      country: country,\r\n      location: location,\r\n      discription: discription,\r\n      imageURL: imageURL,\r\n    };\r\n    fetch(\"http://localhost:4000/addWine\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(wineDetails),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        handleClose();\r\n        setActiveAlert(true)\r\n        setTimeout(() => {\r\n            setActiveAlert(false)\r\n          }, 4000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Your Wine</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Row>\r\n            <Col xs={3}>\r\n              <div className=\"mr-2 mb-3 mb-lg-0\">\r\n                &nbsp; &nbsp; &nbsp;\r\n                <img className=\"wineProfileImage\" src={imageURL} />\r\n              </div>\r\n            </Col>\r\n            <Col xs={9}>\r\n              <div>\r\n                <div className=\"media-body\">\r\n                  <h2 className=\"wineTitle\">{wineName}</h2>\r\n\r\n                  <ul className=\"list-inline list-inline-dotted mb-3 mb-xl-2\">\r\n                    <li className=\"list-inline-item\">\r\n                      <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                        {Type}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                        {color}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                        {year}\r\n                      </a>\r\n                    </li>\r\n                    <br />\r\n                    <li className=\"list-inline-item\">\r\n                      <a href=\"#\" className=\"text-muted\" data-abc=\"true\">\r\n                        {location} , {country}\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"mt-3 mt-lg-0 ml-lg-3 text-center\">\r\n                  <br />\r\n                  {/* <h3 className=\"mb-0 font-weight-semibold\">\r\n                          {\" \"}\r\n                          Price : {wine.wine.Price}€\r\n                        </h3> */}\r\n\r\n                  <ul className=\"list-inline list-inline-dotted mb-0\">\r\n                    <li className=\"list-inline-item\">\r\n                      {\" \"}\r\n                      <strong>Grape : </strong> {grape}{\" \"}\r\n                    </li>\r\n                    <br />\r\n                    <li className=\"list-inline-item\">\r\n                      {\" \"}\r\n                      <strong>Winery by</strong>{\" \"}\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href={`https://www.google.com/search?q=${winery}`}\r\n                        data-abc=\"true\"\r\n                      >\r\n                        {\" \"}\r\n                        {winery}{\" \"}\r\n                      </a>\r\n                    </li>\r\n                    <br /> <br />\r\n                  </ul>\r\n                  <strong>Wine discription</strong>\r\n                  <p className=\"mb-3\">{discription}</p>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={onAddWineHandler}>\r\n            Save Wine\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"mainDiv\">\r\n        <div className=\"cardStyle addWine\">\r\n          <h2 className=\"formTitle\">Add Wine</h2>\r\n\r\n          {activeAlert && (\r\n            <Alert key=\"success\" variant=\"success\">\r\n              Wine succesfully added.\r\n            </Alert>\r\n          )}\r\n          <Container>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Wine Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    value={wineName}\r\n                    onChange={(e) => {\r\n                      setWineName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Winery</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    value={winery}\r\n                    onChange={(e) => {\r\n                      setWinery(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Type</label>\r\n                  <select\r\n                    className=\"selectGrape\"\r\n                    onChange={(e) => {\r\n                      setType(e.target.value);\r\n                    }}\r\n                  >\r\n                    {allTypes.map((type) => (\r\n                      <option value={type}>{type}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Color</label>\r\n                  <select\r\n                    className=\"selectGrape\"\r\n                    onChange={(e) => {\r\n                      setColor(e.target.value);\r\n                    }}\r\n                  >\r\n                    {allColors.map((color) => (\r\n                      <option value={color}>{color}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Year</label>\r\n                  <select\r\n                    className=\"selectGrape\"\r\n                    onChange={(e) => {\r\n                      setYear(e.target.value);\r\n                    }}\r\n                  >\r\n                    {allyears.reverse().map((years) => (\r\n                      <option value={years}>{years}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    value={price}\r\n                    onChange={(e) => {\r\n                      setPrice(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Country</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    value={country}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      setCountry(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Location</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    value={location}\r\n                    onChange={(e) => {\r\n                      setLocation(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Grapes</label>\r\n                  <select\r\n                    className=\"selectGrape\"\r\n                    onChange={(e) => {\r\n                      setGrape(e.target.value);\r\n                    }}\r\n                  >\r\n                    {allGrapes.map((grape) => (\r\n                      <option value={grape}>{grape}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={4}>\r\n                {\" \"}\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Discription</label>\r\n                  <input\r\n                    className=\"wineDiscription\"\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    value={discription}\r\n                    onChange={(e) => {\r\n                      setDiscription(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs={4}></Col>\r\n              <Col xs={4}>\r\n                {\" \"}\r\n                <div className=\"inputDiv\">\r\n                  <label className=\"inputLabel\">Image Url</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    value={imageURL}\r\n                    onChange={(e) => {\r\n                      setImageURL(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <br />\r\n          <Container>\r\n            <Row>\r\n              <Col xs={4}></Col>\r\n              <Col xs={1}>\r\n                {\" \"}\r\n                <Button variant=\"danger\" onClick={onClearHandler}>\r\n                  &nbsp;&nbsp;Clear&nbsp;&nbsp;\r\n                </Button>\r\n              </Col>\r\n              <Col xs={2}></Col>\r\n              <Col xs={1}>\r\n                {\" \"}\r\n                <Button\r\n                  variant=\"success\"\r\n                  onClick={handleShow}\r\n                  disabled={\r\n                    wineName === \"\" ||\r\n                    winery === \"\" ||\r\n                    price.trim() === \"\" ||\r\n                    country.trim() === \"\" ||\r\n                    location.trim() === \"\" ||\r\n                    discription.trim() === \"\" ||\r\n                    imageURL.trim() === \"\"\r\n                  }\r\n                >\r\n                  Add&nbsp;Wine\r\n                </Button>\r\n              </Col>\r\n              <Col xs={3}></Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddWine;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\FoodAndWine.js",[],"C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\HelpUs.js",["179","180","181","182","183","184","185"],"import React from \"react\";\r\nimport { Container, Col, Row, Button, Modal, Alert } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport \"./HelpUs.css\";\r\n\r\nconst HelpUs = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"cardStyle helpUs\">\r\n        <h2 className=\"formTitle\">Login to your account</h2>\r\n\r\n        <div className=\"inputDiv\">\r\n          <label className=\"inputLabel\">New Password</label>\r\n          <input type=\"password\" id=\"password\" />\r\n        </div>\r\n\r\n        <div className=\"inputDiv\">\r\n          <label className=\"inputLabel\">Confirm Password</label>\r\n          <input type=\"password\" id=\"confirmPassword\" />\r\n        </div>\r\n\r\n        <div className=\"buttonWrapper\">\r\n          <button\r\n            type=\"submit\"\r\n            id=\"submitButton\"\r\n            className=\"submitButton pure-button pure-button-primary\"\r\n          >\r\n            <span>Continue to Change</span>\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpUs;\r\n","C:\\Users\\dimitris.siamplis\\Desktop\\React-Node\\Front-End\\src\\pages\\Guide.js",["186","187","188","189","190","191","192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":62,"column":6,"nodeType":"199","endLine":62,"endColumn":8,"suggestions":"200"},{"ruleId":"197","severity":1,"message":"198","line":71,"column":6,"nodeType":"199","endLine":71,"endColumn":13,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"206","line":2,"column":39,"nodeType":"204","messageId":"205","endLine":2,"endColumn":43},{"ruleId":"197","severity":1,"message":"207","line":42,"column":6,"nodeType":"199","endLine":52,"endColumn":4,"suggestions":"208"},{"ruleId":"202","severity":1,"message":"209","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":8},{"ruleId":"202","severity":1,"message":"210","line":12,"column":3,"nodeType":"204","messageId":"205","endLine":12,"endColumn":9},{"ruleId":"202","severity":1,"message":"211","line":22,"column":10,"nodeType":"204","messageId":"205","endLine":22,"endColumn":22},{"ruleId":"197","severity":1,"message":"212","line":41,"column":6,"nodeType":"199","endLine":41,"endColumn":8,"suggestions":"213"},{"ruleId":"202","severity":1,"message":"214","line":43,"column":9,"nodeType":"204","messageId":"205","endLine":43,"endColumn":21},{"ruleId":"202","severity":1,"message":"215","line":48,"column":9,"nodeType":"204","messageId":"205","endLine":48,"endColumn":22},{"ruleId":"202","severity":1,"message":"216","line":14,"column":3,"nodeType":"204","messageId":"205","endLine":14,"endColumn":11},{"ruleId":"202","severity":1,"message":"217","line":22,"column":3,"nodeType":"204","messageId":"205","endLine":22,"endColumn":19},{"ruleId":"202","severity":1,"message":"218","line":28,"column":7,"nodeType":"204","messageId":"205","endLine":28,"endColumn":14},{"ruleId":"202","severity":1,"message":"219","line":31,"column":10,"nodeType":"204","messageId":"205","endLine":31,"endColumn":24},{"ruleId":"202","severity":1,"message":"220","line":67,"column":7,"nodeType":"204","messageId":"205","endLine":67,"endColumn":11},{"ruleId":"202","severity":1,"message":"221","line":69,"column":43,"nodeType":"204","messageId":"205","endLine":69,"endColumn":49},{"ruleId":"222","severity":1,"message":"223","line":485,"column":31,"nodeType":"224","endLine":485,"endColumn":81},{"ruleId":"225","severity":1,"message":"226","line":499,"column":35,"nodeType":"224","endLine":503,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":508,"column":35,"nodeType":"224","endLine":512,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":517,"column":35,"nodeType":"224","endLine":521,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":527,"column":35,"nodeType":"224","endLine":531,"endColumn":36},{"ruleId":"227","severity":1,"message":"228","line":549,"column":35,"nodeType":"224","messageId":"229","endLine":553,"endColumn":36,"fix":"230"},{"ruleId":"202","severity":1,"message":"231","line":7,"column":3,"nodeType":"204","messageId":"205","endLine":7,"endColumn":12},{"ruleId":"202","severity":1,"message":"206","line":10,"column":3,"nodeType":"204","messageId":"205","endLine":10,"endColumn":7},{"ruleId":"202","severity":1,"message":"232","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":8},{"ruleId":"202","severity":1,"message":"233","line":12,"column":3,"nodeType":"204","messageId":"205","endLine":12,"endColumn":8},{"ruleId":"202","severity":1,"message":"216","line":13,"column":3,"nodeType":"204","messageId":"205","endLine":13,"endColumn":11},{"ruleId":"197","severity":1,"message":"234","line":42,"column":6,"nodeType":"199","endLine":42,"endColumn":8,"suggestions":"235"},{"ruleId":"222","severity":1,"message":"223","line":159,"column":17,"nodeType":"224","endLine":167,"endColumn":19},{"ruleId":"202","severity":1,"message":"232","line":6,"column":45,"nodeType":"204","messageId":"205","endLine":6,"endColumn":50},{"ruleId":"197","severity":1,"message":"236","line":54,"column":6,"nodeType":"199","endLine":54,"endColumn":8,"suggestions":"237"},{"ruleId":"222","severity":1,"message":"223","line":106,"column":23,"nodeType":"224","endLine":109,"endColumn":25},{"ruleId":"225","severity":1,"message":"226","line":119,"column":29,"nodeType":"224","endLine":119,"endColumn":80},{"ruleId":"225","severity":1,"message":"226","line":124,"column":29,"nodeType":"224","endLine":124,"endColumn":80},{"ruleId":"225","severity":1,"message":"226","line":129,"column":29,"nodeType":"224","endLine":129,"endColumn":80},{"ruleId":"225","severity":1,"message":"226","line":135,"column":29,"nodeType":"224","endLine":135,"endColumn":80},{"ruleId":"227","severity":1,"message":"228","line":172,"column":29,"nodeType":"224","messageId":"229","endLine":176,"endColumn":30,"fix":"238"},{"ruleId":"239","severity":1,"message":"240","line":265,"column":37,"nodeType":"241","messageId":"242","endLine":265,"endColumn":39},{"ruleId":"197","severity":1,"message":"212","line":37,"column":6,"nodeType":"199","endLine":37,"endColumn":8,"suggestions":"243"},{"ruleId":"222","severity":1,"message":"223","line":138,"column":23,"nodeType":"224","endLine":142,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":286,"column":43,"nodeType":"241","messageId":"242","endLine":286,"endColumn":45},{"ruleId":"202","severity":1,"message":"244","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":25},{"ruleId":"202","severity":1,"message":"245","line":7,"column":10,"nodeType":"204","messageId":"205","endLine":7,"endColumn":17},{"ruleId":"202","severity":1,"message":"246","line":8,"column":24,"nodeType":"204","messageId":"205","endLine":8,"endColumn":31},{"ruleId":"197","severity":1,"message":"247","line":51,"column":6,"nodeType":"199","endLine":51,"endColumn":8,"suggestions":"248"},{"ruleId":"202","severity":1,"message":"232","line":14,"column":3,"nodeType":"204","messageId":"205","endLine":14,"endColumn":8},{"ruleId":"202","severity":1,"message":"233","line":15,"column":3,"nodeType":"204","messageId":"205","endLine":15,"endColumn":8},{"ruleId":"202","severity":1,"message":"216","line":16,"column":3,"nodeType":"204","messageId":"205","endLine":16,"endColumn":11},{"ruleId":"197","severity":1,"message":"198","line":49,"column":6,"nodeType":"199","endLine":49,"endColumn":8,"suggestions":"249"},{"ruleId":"222","severity":1,"message":"223","line":207,"column":15,"nodeType":"224","endLine":210,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":213,"column":19,"nodeType":"224","endLine":213,"endColumn":61},{"ruleId":"225","severity":1,"message":"226","line":213,"column":19,"nodeType":"224","endLine":213,"endColumn":61},{"ruleId":"222","severity":1,"message":"223","line":263,"column":25,"nodeType":"224","endLine":271,"endColumn":27},{"ruleId":"225","severity":1,"message":"226","line":305,"column":29,"nodeType":"224","endLine":305,"endColumn":71},{"ruleId":"225","severity":1,"message":"226","line":311,"column":29,"nodeType":"224","endLine":311,"endColumn":73},{"ruleId":"225","severity":1,"message":"226","line":353,"column":27,"nodeType":"224","endLine":356,"endColumn":28},{"ruleId":"197","severity":1,"message":"252","line":43,"column":6,"nodeType":"199","endLine":43,"endColumn":8,"suggestions":"253"},{"ruleId":"202","severity":1,"message":"254","line":45,"column":9,"nodeType":"204","messageId":"205","endLine":45,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":82,"column":21,"nodeType":"224","endLine":90,"endColumn":23},{"ruleId":"225","severity":1,"message":"226","line":93,"column":25,"nodeType":"224","endLine":93,"endColumn":72},{"ruleId":"225","severity":1,"message":"226","line":107,"column":25,"nodeType":"224","endLine":107,"endColumn":67},{"ruleId":"225","severity":1,"message":"226","line":111,"column":25,"nodeType":"224","endLine":111,"endColumn":69},{"ruleId":"225","severity":1,"message":"226","line":117,"column":25,"nodeType":"224","endLine":117,"endColumn":72},{"ruleId":"222","severity":1,"message":"223","line":130,"column":23,"nodeType":"224","endLine":138,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":141,"column":27,"nodeType":"224","endLine":141,"endColumn":69},{"ruleId":"225","severity":1,"message":"226","line":141,"column":27,"nodeType":"224","endLine":141,"endColumn":69},{"ruleId":"222","severity":1,"message":"223","line":178,"column":27,"nodeType":"224","endLine":186,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":201,"column":31,"nodeType":"224","endLine":201,"endColumn":75},{"ruleId":"225","severity":1,"message":"226","line":205,"column":31,"nodeType":"224","endLine":205,"endColumn":75},{"ruleId":"197","severity":1,"message":"212","line":32,"column":6,"nodeType":"199","endLine":32,"endColumn":8,"suggestions":"255"},{"ruleId":"222","severity":1,"message":"223","line":123,"column":17,"nodeType":"224","endLine":123,"endColumn":68},{"ruleId":"225","severity":1,"message":"226","line":133,"column":23,"nodeType":"224","endLine":133,"endColumn":74},{"ruleId":"225","severity":1,"message":"226","line":138,"column":23,"nodeType":"224","endLine":138,"endColumn":74},{"ruleId":"225","severity":1,"message":"226","line":143,"column":23,"nodeType":"224","endLine":143,"endColumn":74},{"ruleId":"225","severity":1,"message":"226","line":149,"column":23,"nodeType":"224","endLine":149,"endColumn":74},{"ruleId":"227","severity":1,"message":"228","line":171,"column":23,"nodeType":"224","messageId":"229","endLine":175,"endColumn":24,"fix":"256"},{"ruleId":"202","severity":1,"message":"231","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"257","line":2,"column":21,"nodeType":"204","messageId":"205","endLine":2,"endColumn":24},{"ruleId":"202","severity":1,"message":"258","line":2,"column":26,"nodeType":"204","messageId":"205","endLine":2,"endColumn":29},{"ruleId":"202","severity":1,"message":"203","line":2,"column":31,"nodeType":"204","messageId":"205","endLine":2,"endColumn":37},{"ruleId":"202","severity":1,"message":"232","line":2,"column":39,"nodeType":"204","messageId":"205","endLine":2,"endColumn":44},{"ruleId":"202","severity":1,"message":"233","line":2,"column":46,"nodeType":"204","messageId":"205","endLine":2,"endColumn":51},{"ruleId":"202","severity":1,"message":"259","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":3,"column":31,"nodeType":"204","messageId":"205","endLine":3,"endColumn":37},{"ruleId":"222","severity":1,"message":"223","line":44,"column":9,"nodeType":"224","endLine":47,"endColumn":10},{"ruleId":"222","severity":1,"message":"223","line":142,"column":15,"nodeType":"224","endLine":145,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":148,"column":15,"nodeType":"224","endLine":151,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":154,"column":15,"nodeType":"224","endLine":157,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":203,"column":15,"nodeType":"224","endLine":206,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":209,"column":15,"nodeType":"224","endLine":212,"endColumn":16},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userEmail'. Either include it or remove the dependency array.","ArrayExpression",["262"],["263"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'birthday'. Either include it or remove the dependency array.",["264"],"'faSun' is defined but never used.","'faMoon' is defined but never used.","'nightOrLight' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["265"],"'onSunHandler' is assigned a value but never used.","'onDarkHandler' is assigned a value but never used.","'PageItem' is defined but never used.","'faSearchLocation' is defined but never used.","'history' is assigned a value but never used.","'secondaryWines' is assigned a value but never used.","'user' is assigned a value but never used.","'height' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"266","text":"267"},"'Container' is defined but never used.","'Modal' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'getUser' and 'getUserComments'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'getWine'. Either include it or remove the dependency array.",["269"],{"range":"270","text":"267"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["271"],"'FontAwesomeIcon' is defined but never used.","'faTrash' is defined but never used.","'addDays' is defined but never used.","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["272"],["273"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","React Hook useEffect has missing dependencies: 'getApliesToQuestion' and 'getUser'. Either include them or remove the dependency array.",["274"],"'applyToQuestion' is assigned a value but never used.",["275"],{"range":"276","text":"267"},"'Col' is defined but never used.","'Row' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},[20447,20447]," rel=\"noreferrer\"",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},[6454,6454],{"desc":"283","fix":"289"},{"desc":"290","fix":"291"},{"desc":"277","fix":"292"},{"desc":"293","fix":"294"},{"desc":"283","fix":"295"},[5389,5389],"Update the dependencies array to be: [userEmail]",{"range":"296","text":"297"},"Update the dependencies array to be: [Email, userEmail]",{"range":"298","text":"299"},"Update the dependencies array to be: [firstName, lastName, age, email, password, passwordConfirm, address, number, phone, birthday]",{"range":"300","text":"301"},"Update the dependencies array to be: [getUser]",{"range":"302","text":"303"},"Update the dependencies array to be: [getUser, getUserComments]",{"range":"304","text":"305"},"Update the dependencies array to be: [getWine]",{"range":"306","text":"307"},{"range":"308","text":"303"},"Update the dependencies array to be: [getHistory]",{"range":"309","text":"310"},{"range":"311","text":"297"},"Update the dependencies array to be: [getApliesToQuestion, getUser]",{"range":"312","text":"313"},{"range":"314","text":"303"},[1871,1873],"[userEmail]",[2059,2066],"[Email, userEmail]",[1317,1452],"[firstName, lastName, age, email, password, passwordConfirm, address, number, phone, birthday]",[1002,1004],"[getUser]",[1084,1086],"[getUser, getUserComments]",[1741,1743],"[getWine]",[1302,1304],[1603,1605],"[getHistory]",[1481,1483],[1521,1523],"[getApliesToQuestion, getUser]",[1058,1060]]